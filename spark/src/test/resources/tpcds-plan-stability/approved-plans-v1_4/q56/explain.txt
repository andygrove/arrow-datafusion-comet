== Physical Plan ==
TakeOrderedAndProject (89)
+- * HashAggregate (88)
   +- Exchange (87)
      +- * HashAggregate (86)
         +- Union (85)
            :- * HashAggregate (28)
            :  +- Exchange (27)
            :     +- * ColumnarToRow (26)
            :        +- CometHashAggregate (25)
            :           +- CometProject (24)
            :              +- CometBroadcastHashJoin (23)
            :                 :- CometProject (14)
            :                 :  +- CometBroadcastHashJoin (13)
            :                 :     :- CometProject (8)
            :                 :     :  +- CometBroadcastHashJoin (7)
            :                 :     :     :- CometFilter (2)
            :                 :     :     :  +- CometScan parquet spark_catalog.default.store_sales (1)
            :                 :     :     +- CometBroadcastExchange (6)
            :                 :     :        +- CometProject (5)
            :                 :     :           +- CometFilter (4)
            :                 :     :              +- CometScan parquet spark_catalog.default.date_dim (3)
            :                 :     +- CometBroadcastExchange (12)
            :                 :        +- CometProject (11)
            :                 :           +- CometFilter (10)
            :                 :              +- CometScan parquet spark_catalog.default.customer_address (9)
            :                 +- CometBroadcastExchange (22)
            :                    +- CometBroadcastHashJoin (21)
            :                       :- CometFilter (16)
            :                       :  +- CometScan parquet spark_catalog.default.item (15)
            :                       +- CometBroadcastExchange (20)
            :                          +- CometProject (19)
            :                             +- CometFilter (18)
            :                                +- CometScan parquet spark_catalog.default.item (17)
            :- * HashAggregate (56)
            :  +- Exchange (55)
            :     +- * ColumnarToRow (54)
            :        +- CometHashAggregate (53)
            :           +- CometProject (52)
            :              +- CometBroadcastHashJoin (51)
            :                 :- CometProject (42)
            :                 :  +- CometBroadcastHashJoin (41)
            :                 :     :- CometProject (36)
            :                 :     :  +- CometBroadcastHashJoin (35)
            :                 :     :     :- CometFilter (30)
            :                 :     :     :  +- CometScan parquet spark_catalog.default.catalog_sales (29)
            :                 :     :     +- CometBroadcastExchange (34)
            :                 :     :        +- CometProject (33)
            :                 :     :           +- CometFilter (32)
            :                 :     :              +- CometScan parquet spark_catalog.default.date_dim (31)
            :                 :     +- CometBroadcastExchange (40)
            :                 :        +- CometProject (39)
            :                 :           +- CometFilter (38)
            :                 :              +- CometScan parquet spark_catalog.default.customer_address (37)
            :                 +- CometBroadcastExchange (50)
            :                    +- CometBroadcastHashJoin (49)
            :                       :- CometFilter (44)
            :                       :  +- CometScan parquet spark_catalog.default.item (43)
            :                       +- CometBroadcastExchange (48)
            :                          +- CometProject (47)
            :                             +- CometFilter (46)
            :                                +- CometScan parquet spark_catalog.default.item (45)
            +- * HashAggregate (84)
               +- Exchange (83)
                  +- * ColumnarToRow (82)
                     +- CometHashAggregate (81)
                        +- CometProject (80)
                           +- CometBroadcastHashJoin (79)
                              :- CometProject (70)
                              :  +- CometBroadcastHashJoin (69)
                              :     :- CometProject (64)
                              :     :  +- CometBroadcastHashJoin (63)
                              :     :     :- CometFilter (58)
                              :     :     :  +- CometScan parquet spark_catalog.default.web_sales (57)
                              :     :     +- CometBroadcastExchange (62)
                              :     :        +- CometProject (61)
                              :     :           +- CometFilter (60)
                              :     :              +- CometScan parquet spark_catalog.default.date_dim (59)
                              :     +- CometBroadcastExchange (68)
                              :        +- CometProject (67)
                              :           +- CometFilter (66)
                              :              +- CometScan parquet spark_catalog.default.customer_address (65)
                              +- CometBroadcastExchange (78)
                                 +- CometBroadcastHashJoin (77)
                                    :- CometFilter (72)
                                    :  +- CometScan parquet spark_catalog.default.item (71)
                                    +- CometBroadcastExchange (76)
                                       +- CometProject (75)
                                          +- CometFilter (74)
                                             +- CometScan parquet spark_catalog.default.item (73)


(1) Scan parquet spark_catalog.default.store_sales
Output [4]: [ss_item_sk#1, ss_addr_sk#2, ss_ext_sales_price#3, ss_sold_date_sk#4]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ss_sold_date_sk#4), dynamicpruningexpression(ss_sold_date_sk#4 IN dynamicpruning#5)]
PushedFilters: [IsNotNull(ss_addr_sk), IsNotNull(ss_item_sk)]
ReadSchema: struct<ss_item_sk:int,ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)>

(2) CometFilter
Input [4]: [ss_item_sk#1, ss_addr_sk#2, ss_ext_sales_price#3, ss_sold_date_sk#4]
Condition : (isnotnull(ss_addr_sk#2) AND isnotnull(ss_item_sk#1))

(3) Scan parquet spark_catalog.default.date_dim
Output [3]: [d_date_sk#6, d_year#7, d_moy#8]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2001), EqualTo(d_moy,2), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>

(4) CometFilter
Input [3]: [d_date_sk#6, d_year#7, d_moy#8]
Condition : ((((isnotnull(d_year#7) AND isnotnull(d_moy#8)) AND (d_year#7 = 2001)) AND (d_moy#8 = 2)) AND isnotnull(d_date_sk#6))

(5) CometProject
Input [3]: [d_date_sk#6, d_year#7, d_moy#8]
Arguments: [d_date_sk#6], [d_date_sk#6]

(6) CometBroadcastExchange
Input [1]: [d_date_sk#6]
Arguments: [d_date_sk#6]

(7) CometBroadcastHashJoin
Left output [4]: [ss_item_sk#1, ss_addr_sk#2, ss_ext_sales_price#3, ss_sold_date_sk#4]
Right output [1]: [d_date_sk#6]
Arguments: [ss_sold_date_sk#4], [d_date_sk#6], Inner

(8) CometProject
Input [5]: [ss_item_sk#1, ss_addr_sk#2, ss_ext_sales_price#3, ss_sold_date_sk#4, d_date_sk#6]
Arguments: [ss_item_sk#1, ss_addr_sk#2, ss_ext_sales_price#3], [ss_item_sk#1, ss_addr_sk#2, ss_ext_sales_price#3]

(9) Scan parquet spark_catalog.default.customer_address
Output [2]: [ca_address_sk#9, ca_gmt_offset#10]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer_address]
PushedFilters: [IsNotNull(ca_gmt_offset), EqualTo(ca_gmt_offset,-5.00), IsNotNull(ca_address_sk)]
ReadSchema: struct<ca_address_sk:int,ca_gmt_offset:decimal(5,2)>

(10) CometFilter
Input [2]: [ca_address_sk#9, ca_gmt_offset#10]
Condition : ((isnotnull(ca_gmt_offset#10) AND (ca_gmt_offset#10 = -5.00)) AND isnotnull(ca_address_sk#9))

(11) CometProject
Input [2]: [ca_address_sk#9, ca_gmt_offset#10]
Arguments: [ca_address_sk#9], [ca_address_sk#9]

(12) CometBroadcastExchange
Input [1]: [ca_address_sk#9]
Arguments: [ca_address_sk#9]

(13) CometBroadcastHashJoin
Left output [3]: [ss_item_sk#1, ss_addr_sk#2, ss_ext_sales_price#3]
Right output [1]: [ca_address_sk#9]
Arguments: [ss_addr_sk#2], [ca_address_sk#9], Inner

(14) CometProject
Input [4]: [ss_item_sk#1, ss_addr_sk#2, ss_ext_sales_price#3, ca_address_sk#9]
Arguments: [ss_item_sk#1, ss_ext_sales_price#3], [ss_item_sk#1, ss_ext_sales_price#3]

(15) Scan parquet spark_catalog.default.item
Output [2]: [i_item_sk#11, i_item_id#12]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_item_id:string>

(16) CometFilter
Input [2]: [i_item_sk#11, i_item_id#12]
Condition : isnotnull(i_item_sk#11)

(17) Scan parquet spark_catalog.default.item
Output [2]: [i_item_id#13, i_color#14]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [In(i_color, [blanched            ,burnished           ,slate               ])]
ReadSchema: struct<i_item_id:string,i_color:string>

(18) CometFilter
Input [2]: [i_item_id#13, i_color#14]
Condition : i_color#14 IN (slate               ,blanched            ,burnished           )

(19) CometProject
Input [2]: [i_item_id#13, i_color#14]
Arguments: [i_item_id#13], [i_item_id#13]

(20) CometBroadcastExchange
Input [1]: [i_item_id#13]
Arguments: [i_item_id#13]

(21) CometBroadcastHashJoin
Left output [2]: [i_item_sk#11, i_item_id#12]
Right output [1]: [i_item_id#13]
Arguments: [i_item_id#12], [i_item_id#13], LeftSemi

(22) CometBroadcastExchange
Input [2]: [i_item_sk#11, i_item_id#12]
Arguments: [i_item_sk#11, i_item_id#12]

(23) CometBroadcastHashJoin
Left output [2]: [ss_item_sk#1, ss_ext_sales_price#3]
Right output [2]: [i_item_sk#11, i_item_id#12]
Arguments: [ss_item_sk#1], [i_item_sk#11], Inner

(24) CometProject
Input [4]: [ss_item_sk#1, ss_ext_sales_price#3, i_item_sk#11, i_item_id#12]
Arguments: [ss_ext_sales_price#3, i_item_id#12], [ss_ext_sales_price#3, i_item_id#12]

(25) CometHashAggregate
Input [2]: [ss_ext_sales_price#3, i_item_id#12]
Keys [1]: [i_item_id#12]
Functions [1]: [partial_sum(UnscaledValue(ss_ext_sales_price#3))]

(26) ColumnarToRow [codegen id : 1]
Input [2]: [i_item_id#12, sum#15]

(27) Exchange
Input [2]: [i_item_id#12, sum#15]
Arguments: hashpartitioning(i_item_id#12, 5), ENSURE_REQUIREMENTS, [plan_id=1]

(28) HashAggregate [codegen id : 2]
Input [2]: [i_item_id#12, sum#15]
Keys [1]: [i_item_id#12]
Functions [1]: [sum(UnscaledValue(ss_ext_sales_price#3))]
Aggregate Attributes [1]: [sum(UnscaledValue(ss_ext_sales_price#3))#16]
Results [2]: [i_item_id#12, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#3))#16,17,2) AS total_sales#17]

(29) Scan parquet spark_catalog.default.catalog_sales
Output [4]: [cs_bill_addr_sk#18, cs_item_sk#19, cs_ext_sales_price#20, cs_sold_date_sk#21]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(cs_sold_date_sk#21), dynamicpruningexpression(cs_sold_date_sk#21 IN dynamicpruning#22)]
PushedFilters: [IsNotNull(cs_bill_addr_sk), IsNotNull(cs_item_sk)]
ReadSchema: struct<cs_bill_addr_sk:int,cs_item_sk:int,cs_ext_sales_price:decimal(7,2)>

(30) CometFilter
Input [4]: [cs_bill_addr_sk#18, cs_item_sk#19, cs_ext_sales_price#20, cs_sold_date_sk#21]
Condition : (isnotnull(cs_bill_addr_sk#18) AND isnotnull(cs_item_sk#19))

(31) Scan parquet spark_catalog.default.date_dim
Output [3]: [d_date_sk#23, d_year#24, d_moy#25]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2001), EqualTo(d_moy,2), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>

(32) CometFilter
Input [3]: [d_date_sk#23, d_year#24, d_moy#25]
Condition : ((((isnotnull(d_year#24) AND isnotnull(d_moy#25)) AND (d_year#24 = 2001)) AND (d_moy#25 = 2)) AND isnotnull(d_date_sk#23))

(33) CometProject
Input [3]: [d_date_sk#23, d_year#24, d_moy#25]
Arguments: [d_date_sk#23], [d_date_sk#23]

(34) CometBroadcastExchange
Input [1]: [d_date_sk#23]
Arguments: [d_date_sk#23]

(35) CometBroadcastHashJoin
Left output [4]: [cs_bill_addr_sk#18, cs_item_sk#19, cs_ext_sales_price#20, cs_sold_date_sk#21]
Right output [1]: [d_date_sk#23]
Arguments: [cs_sold_date_sk#21], [d_date_sk#23], Inner

(36) CometProject
Input [5]: [cs_bill_addr_sk#18, cs_item_sk#19, cs_ext_sales_price#20, cs_sold_date_sk#21, d_date_sk#23]
Arguments: [cs_bill_addr_sk#18, cs_item_sk#19, cs_ext_sales_price#20], [cs_bill_addr_sk#18, cs_item_sk#19, cs_ext_sales_price#20]

(37) Scan parquet spark_catalog.default.customer_address
Output [2]: [ca_address_sk#26, ca_gmt_offset#27]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer_address]
PushedFilters: [IsNotNull(ca_gmt_offset), EqualTo(ca_gmt_offset,-5.00), IsNotNull(ca_address_sk)]
ReadSchema: struct<ca_address_sk:int,ca_gmt_offset:decimal(5,2)>

(38) CometFilter
Input [2]: [ca_address_sk#26, ca_gmt_offset#27]
Condition : ((isnotnull(ca_gmt_offset#27) AND (ca_gmt_offset#27 = -5.00)) AND isnotnull(ca_address_sk#26))

(39) CometProject
Input [2]: [ca_address_sk#26, ca_gmt_offset#27]
Arguments: [ca_address_sk#26], [ca_address_sk#26]

(40) CometBroadcastExchange
Input [1]: [ca_address_sk#26]
Arguments: [ca_address_sk#26]

(41) CometBroadcastHashJoin
Left output [3]: [cs_bill_addr_sk#18, cs_item_sk#19, cs_ext_sales_price#20]
Right output [1]: [ca_address_sk#26]
Arguments: [cs_bill_addr_sk#18], [ca_address_sk#26], Inner

(42) CometProject
Input [4]: [cs_bill_addr_sk#18, cs_item_sk#19, cs_ext_sales_price#20, ca_address_sk#26]
Arguments: [cs_item_sk#19, cs_ext_sales_price#20], [cs_item_sk#19, cs_ext_sales_price#20]

(43) Scan parquet spark_catalog.default.item
Output [2]: [i_item_sk#28, i_item_id#29]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_item_id:string>

(44) CometFilter
Input [2]: [i_item_sk#28, i_item_id#29]
Condition : isnotnull(i_item_sk#28)

(45) Scan parquet spark_catalog.default.item
Output [2]: [i_item_id#30, i_color#31]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [In(i_color, [blanched            ,burnished           ,slate               ])]
ReadSchema: struct<i_item_id:string,i_color:string>

(46) CometFilter
Input [2]: [i_item_id#30, i_color#31]
Condition : i_color#31 IN (slate               ,blanched            ,burnished           )

(47) CometProject
Input [2]: [i_item_id#30, i_color#31]
Arguments: [i_item_id#30], [i_item_id#30]

(48) CometBroadcastExchange
Input [1]: [i_item_id#30]
Arguments: [i_item_id#30]

(49) CometBroadcastHashJoin
Left output [2]: [i_item_sk#28, i_item_id#29]
Right output [1]: [i_item_id#30]
Arguments: [i_item_id#29], [i_item_id#30], LeftSemi

(50) CometBroadcastExchange
Input [2]: [i_item_sk#28, i_item_id#29]
Arguments: [i_item_sk#28, i_item_id#29]

(51) CometBroadcastHashJoin
Left output [2]: [cs_item_sk#19, cs_ext_sales_price#20]
Right output [2]: [i_item_sk#28, i_item_id#29]
Arguments: [cs_item_sk#19], [i_item_sk#28], Inner

(52) CometProject
Input [4]: [cs_item_sk#19, cs_ext_sales_price#20, i_item_sk#28, i_item_id#29]
Arguments: [cs_ext_sales_price#20, i_item_id#29], [cs_ext_sales_price#20, i_item_id#29]

(53) CometHashAggregate
Input [2]: [cs_ext_sales_price#20, i_item_id#29]
Keys [1]: [i_item_id#29]
Functions [1]: [partial_sum(UnscaledValue(cs_ext_sales_price#20))]

(54) ColumnarToRow [codegen id : 3]
Input [2]: [i_item_id#29, sum#32]

(55) Exchange
Input [2]: [i_item_id#29, sum#32]
Arguments: hashpartitioning(i_item_id#29, 5), ENSURE_REQUIREMENTS, [plan_id=2]

(56) HashAggregate [codegen id : 4]
Input [2]: [i_item_id#29, sum#32]
Keys [1]: [i_item_id#29]
Functions [1]: [sum(UnscaledValue(cs_ext_sales_price#20))]
Aggregate Attributes [1]: [sum(UnscaledValue(cs_ext_sales_price#20))#33]
Results [2]: [i_item_id#29, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#20))#33,17,2) AS total_sales#34]

(57) Scan parquet spark_catalog.default.web_sales
Output [4]: [ws_item_sk#35, ws_bill_addr_sk#36, ws_ext_sales_price#37, ws_sold_date_sk#38]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ws_sold_date_sk#38), dynamicpruningexpression(ws_sold_date_sk#38 IN dynamicpruning#39)]
PushedFilters: [IsNotNull(ws_bill_addr_sk), IsNotNull(ws_item_sk)]
ReadSchema: struct<ws_item_sk:int,ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)>

(58) CometFilter
Input [4]: [ws_item_sk#35, ws_bill_addr_sk#36, ws_ext_sales_price#37, ws_sold_date_sk#38]
Condition : (isnotnull(ws_bill_addr_sk#36) AND isnotnull(ws_item_sk#35))

(59) Scan parquet spark_catalog.default.date_dim
Output [3]: [d_date_sk#40, d_year#41, d_moy#42]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2001), EqualTo(d_moy,2), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>

(60) CometFilter
Input [3]: [d_date_sk#40, d_year#41, d_moy#42]
Condition : ((((isnotnull(d_year#41) AND isnotnull(d_moy#42)) AND (d_year#41 = 2001)) AND (d_moy#42 = 2)) AND isnotnull(d_date_sk#40))

(61) CometProject
Input [3]: [d_date_sk#40, d_year#41, d_moy#42]
Arguments: [d_date_sk#40], [d_date_sk#40]

(62) CometBroadcastExchange
Input [1]: [d_date_sk#40]
Arguments: [d_date_sk#40]

(63) CometBroadcastHashJoin
Left output [4]: [ws_item_sk#35, ws_bill_addr_sk#36, ws_ext_sales_price#37, ws_sold_date_sk#38]
Right output [1]: [d_date_sk#40]
Arguments: [ws_sold_date_sk#38], [d_date_sk#40], Inner

(64) CometProject
Input [5]: [ws_item_sk#35, ws_bill_addr_sk#36, ws_ext_sales_price#37, ws_sold_date_sk#38, d_date_sk#40]
Arguments: [ws_item_sk#35, ws_bill_addr_sk#36, ws_ext_sales_price#37], [ws_item_sk#35, ws_bill_addr_sk#36, ws_ext_sales_price#37]

(65) Scan parquet spark_catalog.default.customer_address
Output [2]: [ca_address_sk#43, ca_gmt_offset#44]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer_address]
PushedFilters: [IsNotNull(ca_gmt_offset), EqualTo(ca_gmt_offset,-5.00), IsNotNull(ca_address_sk)]
ReadSchema: struct<ca_address_sk:int,ca_gmt_offset:decimal(5,2)>

(66) CometFilter
Input [2]: [ca_address_sk#43, ca_gmt_offset#44]
Condition : ((isnotnull(ca_gmt_offset#44) AND (ca_gmt_offset#44 = -5.00)) AND isnotnull(ca_address_sk#43))

(67) CometProject
Input [2]: [ca_address_sk#43, ca_gmt_offset#44]
Arguments: [ca_address_sk#43], [ca_address_sk#43]

(68) CometBroadcastExchange
Input [1]: [ca_address_sk#43]
Arguments: [ca_address_sk#43]

(69) CometBroadcastHashJoin
Left output [3]: [ws_item_sk#35, ws_bill_addr_sk#36, ws_ext_sales_price#37]
Right output [1]: [ca_address_sk#43]
Arguments: [ws_bill_addr_sk#36], [ca_address_sk#43], Inner

(70) CometProject
Input [4]: [ws_item_sk#35, ws_bill_addr_sk#36, ws_ext_sales_price#37, ca_address_sk#43]
Arguments: [ws_item_sk#35, ws_ext_sales_price#37], [ws_item_sk#35, ws_ext_sales_price#37]

(71) Scan parquet spark_catalog.default.item
Output [2]: [i_item_sk#45, i_item_id#46]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_item_id:string>

(72) CometFilter
Input [2]: [i_item_sk#45, i_item_id#46]
Condition : isnotnull(i_item_sk#45)

(73) Scan parquet spark_catalog.default.item
Output [2]: [i_item_id#47, i_color#48]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [In(i_color, [blanched            ,burnished           ,slate               ])]
ReadSchema: struct<i_item_id:string,i_color:string>

(74) CometFilter
Input [2]: [i_item_id#47, i_color#48]
Condition : i_color#48 IN (slate               ,blanched            ,burnished           )

(75) CometProject
Input [2]: [i_item_id#47, i_color#48]
Arguments: [i_item_id#47], [i_item_id#47]

(76) CometBroadcastExchange
Input [1]: [i_item_id#47]
Arguments: [i_item_id#47]

(77) CometBroadcastHashJoin
Left output [2]: [i_item_sk#45, i_item_id#46]
Right output [1]: [i_item_id#47]
Arguments: [i_item_id#46], [i_item_id#47], LeftSemi

(78) CometBroadcastExchange
Input [2]: [i_item_sk#45, i_item_id#46]
Arguments: [i_item_sk#45, i_item_id#46]

(79) CometBroadcastHashJoin
Left output [2]: [ws_item_sk#35, ws_ext_sales_price#37]
Right output [2]: [i_item_sk#45, i_item_id#46]
Arguments: [ws_item_sk#35], [i_item_sk#45], Inner

(80) CometProject
Input [4]: [ws_item_sk#35, ws_ext_sales_price#37, i_item_sk#45, i_item_id#46]
Arguments: [ws_ext_sales_price#37, i_item_id#46], [ws_ext_sales_price#37, i_item_id#46]

(81) CometHashAggregate
Input [2]: [ws_ext_sales_price#37, i_item_id#46]
Keys [1]: [i_item_id#46]
Functions [1]: [partial_sum(UnscaledValue(ws_ext_sales_price#37))]

(82) ColumnarToRow [codegen id : 5]
Input [2]: [i_item_id#46, sum#49]

(83) Exchange
Input [2]: [i_item_id#46, sum#49]
Arguments: hashpartitioning(i_item_id#46, 5), ENSURE_REQUIREMENTS, [plan_id=3]

(84) HashAggregate [codegen id : 6]
Input [2]: [i_item_id#46, sum#49]
Keys [1]: [i_item_id#46]
Functions [1]: [sum(UnscaledValue(ws_ext_sales_price#37))]
Aggregate Attributes [1]: [sum(UnscaledValue(ws_ext_sales_price#37))#50]
Results [2]: [i_item_id#46, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#37))#50,17,2) AS total_sales#51]

(85) Union

(86) HashAggregate [codegen id : 7]
Input [2]: [i_item_id#12, total_sales#17]
Keys [1]: [i_item_id#12]
Functions [1]: [partial_sum(total_sales#17)]
Aggregate Attributes [2]: [sum#52, isEmpty#53]
Results [3]: [i_item_id#12, sum#54, isEmpty#55]

(87) Exchange
Input [3]: [i_item_id#12, sum#54, isEmpty#55]
Arguments: hashpartitioning(i_item_id#12, 5), ENSURE_REQUIREMENTS, [plan_id=4]

(88) HashAggregate [codegen id : 8]
Input [3]: [i_item_id#12, sum#54, isEmpty#55]
Keys [1]: [i_item_id#12]
Functions [1]: [sum(total_sales#17)]
Aggregate Attributes [1]: [sum(total_sales#17)#56]
Results [2]: [i_item_id#12, sum(total_sales#17)#56 AS total_sales#57]

(89) TakeOrderedAndProject
Input [2]: [i_item_id#12, total_sales#57]
Arguments: 100, [total_sales#57 ASC NULLS FIRST], [i_item_id#12, total_sales#57]

===== Subqueries =====

Subquery:1 Hosting operator id = 1 Hosting Expression = ss_sold_date_sk#4 IN dynamicpruning#5
BroadcastExchange (94)
+- * ColumnarToRow (93)
   +- CometProject (92)
      +- CometFilter (91)
         +- CometScan parquet spark_catalog.default.date_dim (90)


(90) Scan parquet spark_catalog.default.date_dim
Output [3]: [d_date_sk#6, d_year#7, d_moy#8]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2001), EqualTo(d_moy,2), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>

(91) CometFilter
Input [3]: [d_date_sk#6, d_year#7, d_moy#8]
Condition : ((((isnotnull(d_year#7) AND isnotnull(d_moy#8)) AND (d_year#7 = 2001)) AND (d_moy#8 = 2)) AND isnotnull(d_date_sk#6))

(92) CometProject
Input [3]: [d_date_sk#6, d_year#7, d_moy#8]
Arguments: [d_date_sk#6], [d_date_sk#6]

(93) ColumnarToRow [codegen id : 1]
Input [1]: [d_date_sk#6]

(94) BroadcastExchange
Input [1]: [d_date_sk#6]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=5]

Subquery:2 Hosting operator id = 29 Hosting Expression = cs_sold_date_sk#21 IN dynamicpruning#5

Subquery:3 Hosting operator id = 57 Hosting Expression = ws_sold_date_sk#38 IN dynamicpruning#5


