== Physical Plan ==
* BroadcastNestedLoopJoin Inner BuildRight (214)
:- * BroadcastNestedLoopJoin Inner BuildRight (187)
:  :- * BroadcastNestedLoopJoin Inner BuildRight (160)
:  :  :- * BroadcastNestedLoopJoin Inner BuildRight (133)
:  :  :  :- * BroadcastNestedLoopJoin Inner BuildRight (106)
:  :  :  :  :- * BroadcastNestedLoopJoin Inner BuildRight (79)
:  :  :  :  :  :- * BroadcastNestedLoopJoin Inner BuildRight (52)
:  :  :  :  :  :  :- * HashAggregate (25)
:  :  :  :  :  :  :  +- Exchange (24)
:  :  :  :  :  :  :     +- * ColumnarToRow (23)
:  :  :  :  :  :  :        +- CometHashAggregate (22)
:  :  :  :  :  :  :           +- CometProject (21)
:  :  :  :  :  :  :              +- CometBroadcastHashJoin (20)
:  :  :  :  :  :  :                 :- CometProject (15)
:  :  :  :  :  :  :                 :  +- CometBroadcastHashJoin (14)
:  :  :  :  :  :  :                 :     :- CometProject (9)
:  :  :  :  :  :  :                 :     :  +- CometBroadcastHashJoin (8)
:  :  :  :  :  :  :                 :     :     :- CometProject (3)
:  :  :  :  :  :  :                 :     :     :  +- CometFilter (2)
:  :  :  :  :  :  :                 :     :     :     +- CometScan parquet spark_catalog.default.store_sales (1)
:  :  :  :  :  :  :                 :     :     +- CometBroadcastExchange (7)
:  :  :  :  :  :  :                 :     :        +- CometProject (6)
:  :  :  :  :  :  :                 :     :           +- CometFilter (5)
:  :  :  :  :  :  :                 :     :              +- CometScan parquet spark_catalog.default.household_demographics (4)
:  :  :  :  :  :  :                 :     +- CometBroadcastExchange (13)
:  :  :  :  :  :  :                 :        +- CometProject (12)
:  :  :  :  :  :  :                 :           +- CometFilter (11)
:  :  :  :  :  :  :                 :              +- CometScan parquet spark_catalog.default.time_dim (10)
:  :  :  :  :  :  :                 +- CometBroadcastExchange (19)
:  :  :  :  :  :  :                    +- CometProject (18)
:  :  :  :  :  :  :                       +- CometFilter (17)
:  :  :  :  :  :  :                          +- CometScan parquet spark_catalog.default.store (16)
:  :  :  :  :  :  +- BroadcastExchange (51)
:  :  :  :  :  :     +- * HashAggregate (50)
:  :  :  :  :  :        +- Exchange (49)
:  :  :  :  :  :           +- * ColumnarToRow (48)
:  :  :  :  :  :              +- CometHashAggregate (47)
:  :  :  :  :  :                 +- CometProject (46)
:  :  :  :  :  :                    +- CometBroadcastHashJoin (45)
:  :  :  :  :  :                       :- CometProject (40)
:  :  :  :  :  :                       :  +- CometBroadcastHashJoin (39)
:  :  :  :  :  :                       :     :- CometProject (34)
:  :  :  :  :  :                       :     :  +- CometBroadcastHashJoin (33)
:  :  :  :  :  :                       :     :     :- CometProject (28)
:  :  :  :  :  :                       :     :     :  +- CometFilter (27)
:  :  :  :  :  :                       :     :     :     +- CometScan parquet spark_catalog.default.store_sales (26)
:  :  :  :  :  :                       :     :     +- CometBroadcastExchange (32)
:  :  :  :  :  :                       :     :        +- CometProject (31)
:  :  :  :  :  :                       :     :           +- CometFilter (30)
:  :  :  :  :  :                       :     :              +- CometScan parquet spark_catalog.default.household_demographics (29)
:  :  :  :  :  :                       :     +- CometBroadcastExchange (38)
:  :  :  :  :  :                       :        +- CometProject (37)
:  :  :  :  :  :                       :           +- CometFilter (36)
:  :  :  :  :  :                       :              +- CometScan parquet spark_catalog.default.time_dim (35)
:  :  :  :  :  :                       +- CometBroadcastExchange (44)
:  :  :  :  :  :                          +- CometProject (43)
:  :  :  :  :  :                             +- CometFilter (42)
:  :  :  :  :  :                                +- CometScan parquet spark_catalog.default.store (41)
:  :  :  :  :  +- BroadcastExchange (78)
:  :  :  :  :     +- * HashAggregate (77)
:  :  :  :  :        +- Exchange (76)
:  :  :  :  :           +- * ColumnarToRow (75)
:  :  :  :  :              +- CometHashAggregate (74)
:  :  :  :  :                 +- CometProject (73)
:  :  :  :  :                    +- CometBroadcastHashJoin (72)
:  :  :  :  :                       :- CometProject (67)
:  :  :  :  :                       :  +- CometBroadcastHashJoin (66)
:  :  :  :  :                       :     :- CometProject (61)
:  :  :  :  :                       :     :  +- CometBroadcastHashJoin (60)
:  :  :  :  :                       :     :     :- CometProject (55)
:  :  :  :  :                       :     :     :  +- CometFilter (54)
:  :  :  :  :                       :     :     :     +- CometScan parquet spark_catalog.default.store_sales (53)
:  :  :  :  :                       :     :     +- CometBroadcastExchange (59)
:  :  :  :  :                       :     :        +- CometProject (58)
:  :  :  :  :                       :     :           +- CometFilter (57)
:  :  :  :  :                       :     :              +- CometScan parquet spark_catalog.default.household_demographics (56)
:  :  :  :  :                       :     +- CometBroadcastExchange (65)
:  :  :  :  :                       :        +- CometProject (64)
:  :  :  :  :                       :           +- CometFilter (63)
:  :  :  :  :                       :              +- CometScan parquet spark_catalog.default.time_dim (62)
:  :  :  :  :                       +- CometBroadcastExchange (71)
:  :  :  :  :                          +- CometProject (70)
:  :  :  :  :                             +- CometFilter (69)
:  :  :  :  :                                +- CometScan parquet spark_catalog.default.store (68)
:  :  :  :  +- BroadcastExchange (105)
:  :  :  :     +- * HashAggregate (104)
:  :  :  :        +- Exchange (103)
:  :  :  :           +- * ColumnarToRow (102)
:  :  :  :              +- CometHashAggregate (101)
:  :  :  :                 +- CometProject (100)
:  :  :  :                    +- CometBroadcastHashJoin (99)
:  :  :  :                       :- CometProject (94)
:  :  :  :                       :  +- CometBroadcastHashJoin (93)
:  :  :  :                       :     :- CometProject (88)
:  :  :  :                       :     :  +- CometBroadcastHashJoin (87)
:  :  :  :                       :     :     :- CometProject (82)
:  :  :  :                       :     :     :  +- CometFilter (81)
:  :  :  :                       :     :     :     +- CometScan parquet spark_catalog.default.store_sales (80)
:  :  :  :                       :     :     +- CometBroadcastExchange (86)
:  :  :  :                       :     :        +- CometProject (85)
:  :  :  :                       :     :           +- CometFilter (84)
:  :  :  :                       :     :              +- CometScan parquet spark_catalog.default.household_demographics (83)
:  :  :  :                       :     +- CometBroadcastExchange (92)
:  :  :  :                       :        +- CometProject (91)
:  :  :  :                       :           +- CometFilter (90)
:  :  :  :                       :              +- CometScan parquet spark_catalog.default.time_dim (89)
:  :  :  :                       +- CometBroadcastExchange (98)
:  :  :  :                          +- CometProject (97)
:  :  :  :                             +- CometFilter (96)
:  :  :  :                                +- CometScan parquet spark_catalog.default.store (95)
:  :  :  +- BroadcastExchange (132)
:  :  :     +- * HashAggregate (131)
:  :  :        +- Exchange (130)
:  :  :           +- * ColumnarToRow (129)
:  :  :              +- CometHashAggregate (128)
:  :  :                 +- CometProject (127)
:  :  :                    +- CometBroadcastHashJoin (126)
:  :  :                       :- CometProject (121)
:  :  :                       :  +- CometBroadcastHashJoin (120)
:  :  :                       :     :- CometProject (115)
:  :  :                       :     :  +- CometBroadcastHashJoin (114)
:  :  :                       :     :     :- CometProject (109)
:  :  :                       :     :     :  +- CometFilter (108)
:  :  :                       :     :     :     +- CometScan parquet spark_catalog.default.store_sales (107)
:  :  :                       :     :     +- CometBroadcastExchange (113)
:  :  :                       :     :        +- CometProject (112)
:  :  :                       :     :           +- CometFilter (111)
:  :  :                       :     :              +- CometScan parquet spark_catalog.default.household_demographics (110)
:  :  :                       :     +- CometBroadcastExchange (119)
:  :  :                       :        +- CometProject (118)
:  :  :                       :           +- CometFilter (117)
:  :  :                       :              +- CometScan parquet spark_catalog.default.time_dim (116)
:  :  :                       +- CometBroadcastExchange (125)
:  :  :                          +- CometProject (124)
:  :  :                             +- CometFilter (123)
:  :  :                                +- CometScan parquet spark_catalog.default.store (122)
:  :  +- BroadcastExchange (159)
:  :     +- * HashAggregate (158)
:  :        +- Exchange (157)
:  :           +- * ColumnarToRow (156)
:  :              +- CometHashAggregate (155)
:  :                 +- CometProject (154)
:  :                    +- CometBroadcastHashJoin (153)
:  :                       :- CometProject (148)
:  :                       :  +- CometBroadcastHashJoin (147)
:  :                       :     :- CometProject (142)
:  :                       :     :  +- CometBroadcastHashJoin (141)
:  :                       :     :     :- CometProject (136)
:  :                       :     :     :  +- CometFilter (135)
:  :                       :     :     :     +- CometScan parquet spark_catalog.default.store_sales (134)
:  :                       :     :     +- CometBroadcastExchange (140)
:  :                       :     :        +- CometProject (139)
:  :                       :     :           +- CometFilter (138)
:  :                       :     :              +- CometScan parquet spark_catalog.default.household_demographics (137)
:  :                       :     +- CometBroadcastExchange (146)
:  :                       :        +- CometProject (145)
:  :                       :           +- CometFilter (144)
:  :                       :              +- CometScan parquet spark_catalog.default.time_dim (143)
:  :                       +- CometBroadcastExchange (152)
:  :                          +- CometProject (151)
:  :                             +- CometFilter (150)
:  :                                +- CometScan parquet spark_catalog.default.store (149)
:  +- BroadcastExchange (186)
:     +- * HashAggregate (185)
:        +- Exchange (184)
:           +- * ColumnarToRow (183)
:              +- CometHashAggregate (182)
:                 +- CometProject (181)
:                    +- CometBroadcastHashJoin (180)
:                       :- CometProject (175)
:                       :  +- CometBroadcastHashJoin (174)
:                       :     :- CometProject (169)
:                       :     :  +- CometBroadcastHashJoin (168)
:                       :     :     :- CometProject (163)
:                       :     :     :  +- CometFilter (162)
:                       :     :     :     +- CometScan parquet spark_catalog.default.store_sales (161)
:                       :     :     +- CometBroadcastExchange (167)
:                       :     :        +- CometProject (166)
:                       :     :           +- CometFilter (165)
:                       :     :              +- CometScan parquet spark_catalog.default.household_demographics (164)
:                       :     +- CometBroadcastExchange (173)
:                       :        +- CometProject (172)
:                       :           +- CometFilter (171)
:                       :              +- CometScan parquet spark_catalog.default.time_dim (170)
:                       +- CometBroadcastExchange (179)
:                          +- CometProject (178)
:                             +- CometFilter (177)
:                                +- CometScan parquet spark_catalog.default.store (176)
+- BroadcastExchange (213)
   +- * HashAggregate (212)
      +- Exchange (211)
         +- * ColumnarToRow (210)
            +- CometHashAggregate (209)
               +- CometProject (208)
                  +- CometBroadcastHashJoin (207)
                     :- CometProject (202)
                     :  +- CometBroadcastHashJoin (201)
                     :     :- CometProject (196)
                     :     :  +- CometBroadcastHashJoin (195)
                     :     :     :- CometProject (190)
                     :     :     :  +- CometFilter (189)
                     :     :     :     +- CometScan parquet spark_catalog.default.store_sales (188)
                     :     :     +- CometBroadcastExchange (194)
                     :     :        +- CometProject (193)
                     :     :           +- CometFilter (192)
                     :     :              +- CometScan parquet spark_catalog.default.household_demographics (191)
                     :     +- CometBroadcastExchange (200)
                     :        +- CometProject (199)
                     :           +- CometFilter (198)
                     :              +- CometScan parquet spark_catalog.default.time_dim (197)
                     +- CometBroadcastExchange (206)
                        +- CometProject (205)
                           +- CometFilter (204)
                              +- CometScan parquet spark_catalog.default.store (203)


(1) Scan parquet spark_catalog.default.store_sales
Output [4]: [ss_sold_time_sk#1, ss_hdemo_sk#2, ss_store_sk#3, ss_sold_date_sk#4]
Batched: true
Location [not included in comparison]/{warehouse_dir}/store_sales]
PushedFilters: [IsNotNull(ss_hdemo_sk), IsNotNull(ss_sold_time_sk), IsNotNull(ss_store_sk)]
ReadSchema: struct<ss_sold_time_sk:int,ss_hdemo_sk:int,ss_store_sk:int>

(2) CometFilter
Input [4]: [ss_sold_time_sk#1, ss_hdemo_sk#2, ss_store_sk#3, ss_sold_date_sk#4]
Condition : ((isnotnull(ss_hdemo_sk#2) AND isnotnull(ss_sold_time_sk#1)) AND isnotnull(ss_store_sk#3))

(3) CometProject
Input [4]: [ss_sold_time_sk#1, ss_hdemo_sk#2, ss_store_sk#3, ss_sold_date_sk#4]
Arguments: [ss_sold_time_sk#1, ss_hdemo_sk#2, ss_store_sk#3], [ss_sold_time_sk#1, ss_hdemo_sk#2, ss_store_sk#3]

(4) Scan parquet spark_catalog.default.household_demographics
Output [3]: [hd_demo_sk#5, hd_dep_count#6, hd_vehicle_count#7]
Batched: true
Location [not included in comparison]/{warehouse_dir}/household_demographics]
PushedFilters: [Or(Or(And(EqualTo(hd_dep_count,4),LessThanOrEqual(hd_vehicle_count,6)),And(EqualTo(hd_dep_count,2),LessThanOrEqual(hd_vehicle_count,4))),And(EqualTo(hd_dep_count,0),LessThanOrEqual(hd_vehicle_count,2))), IsNotNull(hd_demo_sk)]
ReadSchema: struct<hd_demo_sk:int,hd_dep_count:int,hd_vehicle_count:int>

(5) CometFilter
Input [3]: [hd_demo_sk#5, hd_dep_count#6, hd_vehicle_count#7]
Condition : (((((hd_dep_count#6 = 4) AND (hd_vehicle_count#7 <= 6)) OR ((hd_dep_count#6 = 2) AND (hd_vehicle_count#7 <= 4))) OR ((hd_dep_count#6 = 0) AND (hd_vehicle_count#7 <= 2))) AND isnotnull(hd_demo_sk#5))

(6) CometProject
Input [3]: [hd_demo_sk#5, hd_dep_count#6, hd_vehicle_count#7]
Arguments: [hd_demo_sk#5], [hd_demo_sk#5]

(7) CometBroadcastExchange
Input [1]: [hd_demo_sk#5]
Arguments: [hd_demo_sk#5]

(8) CometBroadcastHashJoin
Left output [3]: [ss_sold_time_sk#1, ss_hdemo_sk#2, ss_store_sk#3]
Right output [1]: [hd_demo_sk#5]
Arguments: [ss_hdemo_sk#2], [hd_demo_sk#5], Inner

(9) CometProject
Input [4]: [ss_sold_time_sk#1, ss_hdemo_sk#2, ss_store_sk#3, hd_demo_sk#5]
Arguments: [ss_sold_time_sk#1, ss_store_sk#3], [ss_sold_time_sk#1, ss_store_sk#3]

(10) Scan parquet spark_catalog.default.time_dim
Output [3]: [t_time_sk#8, t_hour#9, t_minute#10]
Batched: true
Location [not included in comparison]/{warehouse_dir}/time_dim]
PushedFilters: [IsNotNull(t_hour), IsNotNull(t_minute), EqualTo(t_hour,8), GreaterThanOrEqual(t_minute,30), IsNotNull(t_time_sk)]
ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int>

(11) CometFilter
Input [3]: [t_time_sk#8, t_hour#9, t_minute#10]
Condition : ((((isnotnull(t_hour#9) AND isnotnull(t_minute#10)) AND (t_hour#9 = 8)) AND (t_minute#10 >= 30)) AND isnotnull(t_time_sk#8))

(12) CometProject
Input [3]: [t_time_sk#8, t_hour#9, t_minute#10]
Arguments: [t_time_sk#8], [t_time_sk#8]

(13) CometBroadcastExchange
Input [1]: [t_time_sk#8]
Arguments: [t_time_sk#8]

(14) CometBroadcastHashJoin
Left output [2]: [ss_sold_time_sk#1, ss_store_sk#3]
Right output [1]: [t_time_sk#8]
Arguments: [ss_sold_time_sk#1], [t_time_sk#8], Inner

(15) CometProject
Input [3]: [ss_sold_time_sk#1, ss_store_sk#3, t_time_sk#8]
Arguments: [ss_store_sk#3], [ss_store_sk#3]

(16) Scan parquet spark_catalog.default.store
Output [2]: [s_store_sk#11, s_store_name#12]
Batched: true
Location [not included in comparison]/{warehouse_dir}/store]
PushedFilters: [IsNotNull(s_store_name), EqualTo(s_store_name,ese), IsNotNull(s_store_sk)]
ReadSchema: struct<s_store_sk:int,s_store_name:string>

(17) CometFilter
Input [2]: [s_store_sk#11, s_store_name#12]
Condition : ((isnotnull(s_store_name#12) AND (s_store_name#12 = ese)) AND isnotnull(s_store_sk#11))

(18) CometProject
Input [2]: [s_store_sk#11, s_store_name#12]
Arguments: [s_store_sk#11], [s_store_sk#11]

(19) CometBroadcastExchange
Input [1]: [s_store_sk#11]
Arguments: [s_store_sk#11]

(20) CometBroadcastHashJoin
Left output [1]: [ss_store_sk#3]
Right output [1]: [s_store_sk#11]
Arguments: [ss_store_sk#3], [s_store_sk#11], Inner

(21) CometProject
Input [2]: [ss_store_sk#3, s_store_sk#11]

(22) CometHashAggregate
Input: []
Keys: []
Functions [1]: [partial_count(1)]

(23) ColumnarToRow [codegen id : 1]
Input [1]: [count#13]

(24) Exchange
Input [1]: [count#13]
Arguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=1]

(25) HashAggregate [codegen id : 16]
Input [1]: [count#13]
Keys: []
Functions [1]: [count(1)]
Aggregate Attributes [1]: [count(1)#14]
Results [1]: [count(1)#14 AS h8_30_to_9#15]

(26) Scan parquet spark_catalog.default.store_sales
Output [4]: [ss_sold_time_sk#16, ss_hdemo_sk#17, ss_store_sk#18, ss_sold_date_sk#19]
Batched: true
Location [not included in comparison]/{warehouse_dir}/store_sales]
PushedFilters: [IsNotNull(ss_hdemo_sk), IsNotNull(ss_sold_time_sk), IsNotNull(ss_store_sk)]
ReadSchema: struct<ss_sold_time_sk:int,ss_hdemo_sk:int,ss_store_sk:int>

(27) CometFilter
Input [4]: [ss_sold_time_sk#16, ss_hdemo_sk#17, ss_store_sk#18, ss_sold_date_sk#19]
Condition : ((isnotnull(ss_hdemo_sk#17) AND isnotnull(ss_sold_time_sk#16)) AND isnotnull(ss_store_sk#18))

(28) CometProject
Input [4]: [ss_sold_time_sk#16, ss_hdemo_sk#17, ss_store_sk#18, ss_sold_date_sk#19]
Arguments: [ss_sold_time_sk#16, ss_hdemo_sk#17, ss_store_sk#18], [ss_sold_time_sk#16, ss_hdemo_sk#17, ss_store_sk#18]

(29) Scan parquet spark_catalog.default.household_demographics
Output [3]: [hd_demo_sk#20, hd_dep_count#21, hd_vehicle_count#22]
Batched: true
Location [not included in comparison]/{warehouse_dir}/household_demographics]
PushedFilters: [Or(Or(And(EqualTo(hd_dep_count,4),LessThanOrEqual(hd_vehicle_count,6)),And(EqualTo(hd_dep_count,2),LessThanOrEqual(hd_vehicle_count,4))),And(EqualTo(hd_dep_count,0),LessThanOrEqual(hd_vehicle_count,2))), IsNotNull(hd_demo_sk)]
ReadSchema: struct<hd_demo_sk:int,hd_dep_count:int,hd_vehicle_count:int>

(30) CometFilter
Input [3]: [hd_demo_sk#20, hd_dep_count#21, hd_vehicle_count#22]
Condition : (((((hd_dep_count#21 = 4) AND (hd_vehicle_count#22 <= 6)) OR ((hd_dep_count#21 = 2) AND (hd_vehicle_count#22 <= 4))) OR ((hd_dep_count#21 = 0) AND (hd_vehicle_count#22 <= 2))) AND isnotnull(hd_demo_sk#20))

(31) CometProject
Input [3]: [hd_demo_sk#20, hd_dep_count#21, hd_vehicle_count#22]
Arguments: [hd_demo_sk#20], [hd_demo_sk#20]

(32) CometBroadcastExchange
Input [1]: [hd_demo_sk#20]
Arguments: [hd_demo_sk#20]

(33) CometBroadcastHashJoin
Left output [3]: [ss_sold_time_sk#16, ss_hdemo_sk#17, ss_store_sk#18]
Right output [1]: [hd_demo_sk#20]
Arguments: [ss_hdemo_sk#17], [hd_demo_sk#20], Inner

(34) CometProject
Input [4]: [ss_sold_time_sk#16, ss_hdemo_sk#17, ss_store_sk#18, hd_demo_sk#20]
Arguments: [ss_sold_time_sk#16, ss_store_sk#18], [ss_sold_time_sk#16, ss_store_sk#18]

(35) Scan parquet spark_catalog.default.time_dim
Output [3]: [t_time_sk#23, t_hour#24, t_minute#25]
Batched: true
Location [not included in comparison]/{warehouse_dir}/time_dim]
PushedFilters: [IsNotNull(t_hour), IsNotNull(t_minute), EqualTo(t_hour,9), LessThan(t_minute,30), IsNotNull(t_time_sk)]
ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int>

(36) CometFilter
Input [3]: [t_time_sk#23, t_hour#24, t_minute#25]
Condition : ((((isnotnull(t_hour#24) AND isnotnull(t_minute#25)) AND (t_hour#24 = 9)) AND (t_minute#25 < 30)) AND isnotnull(t_time_sk#23))

(37) CometProject
Input [3]: [t_time_sk#23, t_hour#24, t_minute#25]
Arguments: [t_time_sk#23], [t_time_sk#23]

(38) CometBroadcastExchange
Input [1]: [t_time_sk#23]
Arguments: [t_time_sk#23]

(39) CometBroadcastHashJoin
Left output [2]: [ss_sold_time_sk#16, ss_store_sk#18]
Right output [1]: [t_time_sk#23]
Arguments: [ss_sold_time_sk#16], [t_time_sk#23], Inner

(40) CometProject
Input [3]: [ss_sold_time_sk#16, ss_store_sk#18, t_time_sk#23]
Arguments: [ss_store_sk#18], [ss_store_sk#18]

(41) Scan parquet spark_catalog.default.store
Output [2]: [s_store_sk#26, s_store_name#27]
Batched: true
Location [not included in comparison]/{warehouse_dir}/store]
PushedFilters: [IsNotNull(s_store_name), EqualTo(s_store_name,ese), IsNotNull(s_store_sk)]
ReadSchema: struct<s_store_sk:int,s_store_name:string>

(42) CometFilter
Input [2]: [s_store_sk#26, s_store_name#27]
Condition : ((isnotnull(s_store_name#27) AND (s_store_name#27 = ese)) AND isnotnull(s_store_sk#26))

(43) CometProject
Input [2]: [s_store_sk#26, s_store_name#27]
Arguments: [s_store_sk#26], [s_store_sk#26]

(44) CometBroadcastExchange
Input [1]: [s_store_sk#26]
Arguments: [s_store_sk#26]

(45) CometBroadcastHashJoin
Left output [1]: [ss_store_sk#18]
Right output [1]: [s_store_sk#26]
Arguments: [ss_store_sk#18], [s_store_sk#26], Inner

(46) CometProject
Input [2]: [ss_store_sk#18, s_store_sk#26]

(47) CometHashAggregate
Input: []
Keys: []
Functions [1]: [partial_count(1)]

(48) ColumnarToRow [codegen id : 2]
Input [1]: [count#28]

(49) Exchange
Input [1]: [count#28]
Arguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=2]

(50) HashAggregate [codegen id : 3]
Input [1]: [count#28]
Keys: []
Functions [1]: [count(1)]
Aggregate Attributes [1]: [count(1)#29]
Results [1]: [count(1)#29 AS h9_to_9_30#30]

(51) BroadcastExchange
Input [1]: [h9_to_9_30#30]
Arguments: IdentityBroadcastMode, [plan_id=3]

(52) BroadcastNestedLoopJoin [codegen id : 16]
Join type: Inner
Join condition: None

(53) Scan parquet spark_catalog.default.store_sales
Output [4]: [ss_sold_time_sk#31, ss_hdemo_sk#32, ss_store_sk#33, ss_sold_date_sk#34]
Batched: true
Location [not included in comparison]/{warehouse_dir}/store_sales]
PushedFilters: [IsNotNull(ss_hdemo_sk), IsNotNull(ss_sold_time_sk), IsNotNull(ss_store_sk)]
ReadSchema: struct<ss_sold_time_sk:int,ss_hdemo_sk:int,ss_store_sk:int>

(54) CometFilter
Input [4]: [ss_sold_time_sk#31, ss_hdemo_sk#32, ss_store_sk#33, ss_sold_date_sk#34]
Condition : ((isnotnull(ss_hdemo_sk#32) AND isnotnull(ss_sold_time_sk#31)) AND isnotnull(ss_store_sk#33))

(55) CometProject
Input [4]: [ss_sold_time_sk#31, ss_hdemo_sk#32, ss_store_sk#33, ss_sold_date_sk#34]
Arguments: [ss_sold_time_sk#31, ss_hdemo_sk#32, ss_store_sk#33], [ss_sold_time_sk#31, ss_hdemo_sk#32, ss_store_sk#33]

(56) Scan parquet spark_catalog.default.household_demographics
Output [3]: [hd_demo_sk#35, hd_dep_count#36, hd_vehicle_count#37]
Batched: true
Location [not included in comparison]/{warehouse_dir}/household_demographics]
PushedFilters: [Or(Or(And(EqualTo(hd_dep_count,4),LessThanOrEqual(hd_vehicle_count,6)),And(EqualTo(hd_dep_count,2),LessThanOrEqual(hd_vehicle_count,4))),And(EqualTo(hd_dep_count,0),LessThanOrEqual(hd_vehicle_count,2))), IsNotNull(hd_demo_sk)]
ReadSchema: struct<hd_demo_sk:int,hd_dep_count:int,hd_vehicle_count:int>

(57) CometFilter
Input [3]: [hd_demo_sk#35, hd_dep_count#36, hd_vehicle_count#37]
Condition : (((((hd_dep_count#36 = 4) AND (hd_vehicle_count#37 <= 6)) OR ((hd_dep_count#36 = 2) AND (hd_vehicle_count#37 <= 4))) OR ((hd_dep_count#36 = 0) AND (hd_vehicle_count#37 <= 2))) AND isnotnull(hd_demo_sk#35))

(58) CometProject
Input [3]: [hd_demo_sk#35, hd_dep_count#36, hd_vehicle_count#37]
Arguments: [hd_demo_sk#35], [hd_demo_sk#35]

(59) CometBroadcastExchange
Input [1]: [hd_demo_sk#35]
Arguments: [hd_demo_sk#35]

(60) CometBroadcastHashJoin
Left output [3]: [ss_sold_time_sk#31, ss_hdemo_sk#32, ss_store_sk#33]
Right output [1]: [hd_demo_sk#35]
Arguments: [ss_hdemo_sk#32], [hd_demo_sk#35], Inner

(61) CometProject
Input [4]: [ss_sold_time_sk#31, ss_hdemo_sk#32, ss_store_sk#33, hd_demo_sk#35]
Arguments: [ss_sold_time_sk#31, ss_store_sk#33], [ss_sold_time_sk#31, ss_store_sk#33]

(62) Scan parquet spark_catalog.default.time_dim
Output [3]: [t_time_sk#38, t_hour#39, t_minute#40]
Batched: true
Location [not included in comparison]/{warehouse_dir}/time_dim]
PushedFilters: [IsNotNull(t_hour), IsNotNull(t_minute), EqualTo(t_hour,9), GreaterThanOrEqual(t_minute,30), IsNotNull(t_time_sk)]
ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int>

(63) CometFilter
Input [3]: [t_time_sk#38, t_hour#39, t_minute#40]
Condition : ((((isnotnull(t_hour#39) AND isnotnull(t_minute#40)) AND (t_hour#39 = 9)) AND (t_minute#40 >= 30)) AND isnotnull(t_time_sk#38))

(64) CometProject
Input [3]: [t_time_sk#38, t_hour#39, t_minute#40]
Arguments: [t_time_sk#38], [t_time_sk#38]

(65) CometBroadcastExchange
Input [1]: [t_time_sk#38]
Arguments: [t_time_sk#38]

(66) CometBroadcastHashJoin
Left output [2]: [ss_sold_time_sk#31, ss_store_sk#33]
Right output [1]: [t_time_sk#38]
Arguments: [ss_sold_time_sk#31], [t_time_sk#38], Inner

(67) CometProject
Input [3]: [ss_sold_time_sk#31, ss_store_sk#33, t_time_sk#38]
Arguments: [ss_store_sk#33], [ss_store_sk#33]

(68) Scan parquet spark_catalog.default.store
Output [2]: [s_store_sk#41, s_store_name#42]
Batched: true
Location [not included in comparison]/{warehouse_dir}/store]
PushedFilters: [IsNotNull(s_store_name), EqualTo(s_store_name,ese), IsNotNull(s_store_sk)]
ReadSchema: struct<s_store_sk:int,s_store_name:string>

(69) CometFilter
Input [2]: [s_store_sk#41, s_store_name#42]
Condition : ((isnotnull(s_store_name#42) AND (s_store_name#42 = ese)) AND isnotnull(s_store_sk#41))

(70) CometProject
Input [2]: [s_store_sk#41, s_store_name#42]
Arguments: [s_store_sk#41], [s_store_sk#41]

(71) CometBroadcastExchange
Input [1]: [s_store_sk#41]
Arguments: [s_store_sk#41]

(72) CometBroadcastHashJoin
Left output [1]: [ss_store_sk#33]
Right output [1]: [s_store_sk#41]
Arguments: [ss_store_sk#33], [s_store_sk#41], Inner

(73) CometProject
Input [2]: [ss_store_sk#33, s_store_sk#41]

(74) CometHashAggregate
Input: []
Keys: []
Functions [1]: [partial_count(1)]

(75) ColumnarToRow [codegen id : 4]
Input [1]: [count#43]

(76) Exchange
Input [1]: [count#43]
Arguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=4]

(77) HashAggregate [codegen id : 5]
Input [1]: [count#43]
Keys: []
Functions [1]: [count(1)]
Aggregate Attributes [1]: [count(1)#44]
Results [1]: [count(1)#44 AS h9_30_to_10#45]

(78) BroadcastExchange
Input [1]: [h9_30_to_10#45]
Arguments: IdentityBroadcastMode, [plan_id=5]

(79) BroadcastNestedLoopJoin [codegen id : 16]
Join type: Inner
Join condition: None

(80) Scan parquet spark_catalog.default.store_sales
Output [4]: [ss_sold_time_sk#46, ss_hdemo_sk#47, ss_store_sk#48, ss_sold_date_sk#49]
Batched: true
Location [not included in comparison]/{warehouse_dir}/store_sales]
PushedFilters: [IsNotNull(ss_hdemo_sk), IsNotNull(ss_sold_time_sk), IsNotNull(ss_store_sk)]
ReadSchema: struct<ss_sold_time_sk:int,ss_hdemo_sk:int,ss_store_sk:int>

(81) CometFilter
Input [4]: [ss_sold_time_sk#46, ss_hdemo_sk#47, ss_store_sk#48, ss_sold_date_sk#49]
Condition : ((isnotnull(ss_hdemo_sk#47) AND isnotnull(ss_sold_time_sk#46)) AND isnotnull(ss_store_sk#48))

(82) CometProject
Input [4]: [ss_sold_time_sk#46, ss_hdemo_sk#47, ss_store_sk#48, ss_sold_date_sk#49]
Arguments: [ss_sold_time_sk#46, ss_hdemo_sk#47, ss_store_sk#48], [ss_sold_time_sk#46, ss_hdemo_sk#47, ss_store_sk#48]

(83) Scan parquet spark_catalog.default.household_demographics
Output [3]: [hd_demo_sk#50, hd_dep_count#51, hd_vehicle_count#52]
Batched: true
Location [not included in comparison]/{warehouse_dir}/household_demographics]
PushedFilters: [Or(Or(And(EqualTo(hd_dep_count,4),LessThanOrEqual(hd_vehicle_count,6)),And(EqualTo(hd_dep_count,2),LessThanOrEqual(hd_vehicle_count,4))),And(EqualTo(hd_dep_count,0),LessThanOrEqual(hd_vehicle_count,2))), IsNotNull(hd_demo_sk)]
ReadSchema: struct<hd_demo_sk:int,hd_dep_count:int,hd_vehicle_count:int>

(84) CometFilter
Input [3]: [hd_demo_sk#50, hd_dep_count#51, hd_vehicle_count#52]
Condition : (((((hd_dep_count#51 = 4) AND (hd_vehicle_count#52 <= 6)) OR ((hd_dep_count#51 = 2) AND (hd_vehicle_count#52 <= 4))) OR ((hd_dep_count#51 = 0) AND (hd_vehicle_count#52 <= 2))) AND isnotnull(hd_demo_sk#50))

(85) CometProject
Input [3]: [hd_demo_sk#50, hd_dep_count#51, hd_vehicle_count#52]
Arguments: [hd_demo_sk#50], [hd_demo_sk#50]

(86) CometBroadcastExchange
Input [1]: [hd_demo_sk#50]
Arguments: [hd_demo_sk#50]

(87) CometBroadcastHashJoin
Left output [3]: [ss_sold_time_sk#46, ss_hdemo_sk#47, ss_store_sk#48]
Right output [1]: [hd_demo_sk#50]
Arguments: [ss_hdemo_sk#47], [hd_demo_sk#50], Inner

(88) CometProject
Input [4]: [ss_sold_time_sk#46, ss_hdemo_sk#47, ss_store_sk#48, hd_demo_sk#50]
Arguments: [ss_sold_time_sk#46, ss_store_sk#48], [ss_sold_time_sk#46, ss_store_sk#48]

(89) Scan parquet spark_catalog.default.time_dim
Output [3]: [t_time_sk#53, t_hour#54, t_minute#55]
Batched: true
Location [not included in comparison]/{warehouse_dir}/time_dim]
PushedFilters: [IsNotNull(t_hour), IsNotNull(t_minute), EqualTo(t_hour,10), LessThan(t_minute,30), IsNotNull(t_time_sk)]
ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int>

(90) CometFilter
Input [3]: [t_time_sk#53, t_hour#54, t_minute#55]
Condition : ((((isnotnull(t_hour#54) AND isnotnull(t_minute#55)) AND (t_hour#54 = 10)) AND (t_minute#55 < 30)) AND isnotnull(t_time_sk#53))

(91) CometProject
Input [3]: [t_time_sk#53, t_hour#54, t_minute#55]
Arguments: [t_time_sk#53], [t_time_sk#53]

(92) CometBroadcastExchange
Input [1]: [t_time_sk#53]
Arguments: [t_time_sk#53]

(93) CometBroadcastHashJoin
Left output [2]: [ss_sold_time_sk#46, ss_store_sk#48]
Right output [1]: [t_time_sk#53]
Arguments: [ss_sold_time_sk#46], [t_time_sk#53], Inner

(94) CometProject
Input [3]: [ss_sold_time_sk#46, ss_store_sk#48, t_time_sk#53]
Arguments: [ss_store_sk#48], [ss_store_sk#48]

(95) Scan parquet spark_catalog.default.store
Output [2]: [s_store_sk#56, s_store_name#57]
Batched: true
Location [not included in comparison]/{warehouse_dir}/store]
PushedFilters: [IsNotNull(s_store_name), EqualTo(s_store_name,ese), IsNotNull(s_store_sk)]
ReadSchema: struct<s_store_sk:int,s_store_name:string>

(96) CometFilter
Input [2]: [s_store_sk#56, s_store_name#57]
Condition : ((isnotnull(s_store_name#57) AND (s_store_name#57 = ese)) AND isnotnull(s_store_sk#56))

(97) CometProject
Input [2]: [s_store_sk#56, s_store_name#57]
Arguments: [s_store_sk#56], [s_store_sk#56]

(98) CometBroadcastExchange
Input [1]: [s_store_sk#56]
Arguments: [s_store_sk#56]

(99) CometBroadcastHashJoin
Left output [1]: [ss_store_sk#48]
Right output [1]: [s_store_sk#56]
Arguments: [ss_store_sk#48], [s_store_sk#56], Inner

(100) CometProject
Input [2]: [ss_store_sk#48, s_store_sk#56]

(101) CometHashAggregate
Input: []
Keys: []
Functions [1]: [partial_count(1)]

(102) ColumnarToRow [codegen id : 6]
Input [1]: [count#58]

(103) Exchange
Input [1]: [count#58]
Arguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=6]

(104) HashAggregate [codegen id : 7]
Input [1]: [count#58]
Keys: []
Functions [1]: [count(1)]
Aggregate Attributes [1]: [count(1)#59]
Results [1]: [count(1)#59 AS h10_to_10_30#60]

(105) BroadcastExchange
Input [1]: [h10_to_10_30#60]
Arguments: IdentityBroadcastMode, [plan_id=7]

(106) BroadcastNestedLoopJoin [codegen id : 16]
Join type: Inner
Join condition: None

(107) Scan parquet spark_catalog.default.store_sales
Output [4]: [ss_sold_time_sk#61, ss_hdemo_sk#62, ss_store_sk#63, ss_sold_date_sk#64]
Batched: true
Location [not included in comparison]/{warehouse_dir}/store_sales]
PushedFilters: [IsNotNull(ss_hdemo_sk), IsNotNull(ss_sold_time_sk), IsNotNull(ss_store_sk)]
ReadSchema: struct<ss_sold_time_sk:int,ss_hdemo_sk:int,ss_store_sk:int>

(108) CometFilter
Input [4]: [ss_sold_time_sk#61, ss_hdemo_sk#62, ss_store_sk#63, ss_sold_date_sk#64]
Condition : ((isnotnull(ss_hdemo_sk#62) AND isnotnull(ss_sold_time_sk#61)) AND isnotnull(ss_store_sk#63))

(109) CometProject
Input [4]: [ss_sold_time_sk#61, ss_hdemo_sk#62, ss_store_sk#63, ss_sold_date_sk#64]
Arguments: [ss_sold_time_sk#61, ss_hdemo_sk#62, ss_store_sk#63], [ss_sold_time_sk#61, ss_hdemo_sk#62, ss_store_sk#63]

(110) Scan parquet spark_catalog.default.household_demographics
Output [3]: [hd_demo_sk#65, hd_dep_count#66, hd_vehicle_count#67]
Batched: true
Location [not included in comparison]/{warehouse_dir}/household_demographics]
PushedFilters: [Or(Or(And(EqualTo(hd_dep_count,4),LessThanOrEqual(hd_vehicle_count,6)),And(EqualTo(hd_dep_count,2),LessThanOrEqual(hd_vehicle_count,4))),And(EqualTo(hd_dep_count,0),LessThanOrEqual(hd_vehicle_count,2))), IsNotNull(hd_demo_sk)]
ReadSchema: struct<hd_demo_sk:int,hd_dep_count:int,hd_vehicle_count:int>

(111) CometFilter
Input [3]: [hd_demo_sk#65, hd_dep_count#66, hd_vehicle_count#67]
Condition : (((((hd_dep_count#66 = 4) AND (hd_vehicle_count#67 <= 6)) OR ((hd_dep_count#66 = 2) AND (hd_vehicle_count#67 <= 4))) OR ((hd_dep_count#66 = 0) AND (hd_vehicle_count#67 <= 2))) AND isnotnull(hd_demo_sk#65))

(112) CometProject
Input [3]: [hd_demo_sk#65, hd_dep_count#66, hd_vehicle_count#67]
Arguments: [hd_demo_sk#65], [hd_demo_sk#65]

(113) CometBroadcastExchange
Input [1]: [hd_demo_sk#65]
Arguments: [hd_demo_sk#65]

(114) CometBroadcastHashJoin
Left output [3]: [ss_sold_time_sk#61, ss_hdemo_sk#62, ss_store_sk#63]
Right output [1]: [hd_demo_sk#65]
Arguments: [ss_hdemo_sk#62], [hd_demo_sk#65], Inner

(115) CometProject
Input [4]: [ss_sold_time_sk#61, ss_hdemo_sk#62, ss_store_sk#63, hd_demo_sk#65]
Arguments: [ss_sold_time_sk#61, ss_store_sk#63], [ss_sold_time_sk#61, ss_store_sk#63]

(116) Scan parquet spark_catalog.default.time_dim
Output [3]: [t_time_sk#68, t_hour#69, t_minute#70]
Batched: true
Location [not included in comparison]/{warehouse_dir}/time_dim]
PushedFilters: [IsNotNull(t_hour), IsNotNull(t_minute), EqualTo(t_hour,10), GreaterThanOrEqual(t_minute,30), IsNotNull(t_time_sk)]
ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int>

(117) CometFilter
Input [3]: [t_time_sk#68, t_hour#69, t_minute#70]
Condition : ((((isnotnull(t_hour#69) AND isnotnull(t_minute#70)) AND (t_hour#69 = 10)) AND (t_minute#70 >= 30)) AND isnotnull(t_time_sk#68))

(118) CometProject
Input [3]: [t_time_sk#68, t_hour#69, t_minute#70]
Arguments: [t_time_sk#68], [t_time_sk#68]

(119) CometBroadcastExchange
Input [1]: [t_time_sk#68]
Arguments: [t_time_sk#68]

(120) CometBroadcastHashJoin
Left output [2]: [ss_sold_time_sk#61, ss_store_sk#63]
Right output [1]: [t_time_sk#68]
Arguments: [ss_sold_time_sk#61], [t_time_sk#68], Inner

(121) CometProject
Input [3]: [ss_sold_time_sk#61, ss_store_sk#63, t_time_sk#68]
Arguments: [ss_store_sk#63], [ss_store_sk#63]

(122) Scan parquet spark_catalog.default.store
Output [2]: [s_store_sk#71, s_store_name#72]
Batched: true
Location [not included in comparison]/{warehouse_dir}/store]
PushedFilters: [IsNotNull(s_store_name), EqualTo(s_store_name,ese), IsNotNull(s_store_sk)]
ReadSchema: struct<s_store_sk:int,s_store_name:string>

(123) CometFilter
Input [2]: [s_store_sk#71, s_store_name#72]
Condition : ((isnotnull(s_store_name#72) AND (s_store_name#72 = ese)) AND isnotnull(s_store_sk#71))

(124) CometProject
Input [2]: [s_store_sk#71, s_store_name#72]
Arguments: [s_store_sk#71], [s_store_sk#71]

(125) CometBroadcastExchange
Input [1]: [s_store_sk#71]
Arguments: [s_store_sk#71]

(126) CometBroadcastHashJoin
Left output [1]: [ss_store_sk#63]
Right output [1]: [s_store_sk#71]
Arguments: [ss_store_sk#63], [s_store_sk#71], Inner

(127) CometProject
Input [2]: [ss_store_sk#63, s_store_sk#71]

(128) CometHashAggregate
Input: []
Keys: []
Functions [1]: [partial_count(1)]

(129) ColumnarToRow [codegen id : 8]
Input [1]: [count#73]

(130) Exchange
Input [1]: [count#73]
Arguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=8]

(131) HashAggregate [codegen id : 9]
Input [1]: [count#73]
Keys: []
Functions [1]: [count(1)]
Aggregate Attributes [1]: [count(1)#74]
Results [1]: [count(1)#74 AS h10_30_to_11#75]

(132) BroadcastExchange
Input [1]: [h10_30_to_11#75]
Arguments: IdentityBroadcastMode, [plan_id=9]

(133) BroadcastNestedLoopJoin [codegen id : 16]
Join type: Inner
Join condition: None

(134) Scan parquet spark_catalog.default.store_sales
Output [4]: [ss_sold_time_sk#76, ss_hdemo_sk#77, ss_store_sk#78, ss_sold_date_sk#79]
Batched: true
Location [not included in comparison]/{warehouse_dir}/store_sales]
PushedFilters: [IsNotNull(ss_hdemo_sk), IsNotNull(ss_sold_time_sk), IsNotNull(ss_store_sk)]
ReadSchema: struct<ss_sold_time_sk:int,ss_hdemo_sk:int,ss_store_sk:int>

(135) CometFilter
Input [4]: [ss_sold_time_sk#76, ss_hdemo_sk#77, ss_store_sk#78, ss_sold_date_sk#79]
Condition : ((isnotnull(ss_hdemo_sk#77) AND isnotnull(ss_sold_time_sk#76)) AND isnotnull(ss_store_sk#78))

(136) CometProject
Input [4]: [ss_sold_time_sk#76, ss_hdemo_sk#77, ss_store_sk#78, ss_sold_date_sk#79]
Arguments: [ss_sold_time_sk#76, ss_hdemo_sk#77, ss_store_sk#78], [ss_sold_time_sk#76, ss_hdemo_sk#77, ss_store_sk#78]

(137) Scan parquet spark_catalog.default.household_demographics
Output [3]: [hd_demo_sk#80, hd_dep_count#81, hd_vehicle_count#82]
Batched: true
Location [not included in comparison]/{warehouse_dir}/household_demographics]
PushedFilters: [Or(Or(And(EqualTo(hd_dep_count,4),LessThanOrEqual(hd_vehicle_count,6)),And(EqualTo(hd_dep_count,2),LessThanOrEqual(hd_vehicle_count,4))),And(EqualTo(hd_dep_count,0),LessThanOrEqual(hd_vehicle_count,2))), IsNotNull(hd_demo_sk)]
ReadSchema: struct<hd_demo_sk:int,hd_dep_count:int,hd_vehicle_count:int>

(138) CometFilter
Input [3]: [hd_demo_sk#80, hd_dep_count#81, hd_vehicle_count#82]
Condition : (((((hd_dep_count#81 = 4) AND (hd_vehicle_count#82 <= 6)) OR ((hd_dep_count#81 = 2) AND (hd_vehicle_count#82 <= 4))) OR ((hd_dep_count#81 = 0) AND (hd_vehicle_count#82 <= 2))) AND isnotnull(hd_demo_sk#80))

(139) CometProject
Input [3]: [hd_demo_sk#80, hd_dep_count#81, hd_vehicle_count#82]
Arguments: [hd_demo_sk#80], [hd_demo_sk#80]

(140) CometBroadcastExchange
Input [1]: [hd_demo_sk#80]
Arguments: [hd_demo_sk#80]

(141) CometBroadcastHashJoin
Left output [3]: [ss_sold_time_sk#76, ss_hdemo_sk#77, ss_store_sk#78]
Right output [1]: [hd_demo_sk#80]
Arguments: [ss_hdemo_sk#77], [hd_demo_sk#80], Inner

(142) CometProject
Input [4]: [ss_sold_time_sk#76, ss_hdemo_sk#77, ss_store_sk#78, hd_demo_sk#80]
Arguments: [ss_sold_time_sk#76, ss_store_sk#78], [ss_sold_time_sk#76, ss_store_sk#78]

(143) Scan parquet spark_catalog.default.time_dim
Output [3]: [t_time_sk#83, t_hour#84, t_minute#85]
Batched: true
Location [not included in comparison]/{warehouse_dir}/time_dim]
PushedFilters: [IsNotNull(t_hour), IsNotNull(t_minute), EqualTo(t_hour,11), LessThan(t_minute,30), IsNotNull(t_time_sk)]
ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int>

(144) CometFilter
Input [3]: [t_time_sk#83, t_hour#84, t_minute#85]
Condition : ((((isnotnull(t_hour#84) AND isnotnull(t_minute#85)) AND (t_hour#84 = 11)) AND (t_minute#85 < 30)) AND isnotnull(t_time_sk#83))

(145) CometProject
Input [3]: [t_time_sk#83, t_hour#84, t_minute#85]
Arguments: [t_time_sk#83], [t_time_sk#83]

(146) CometBroadcastExchange
Input [1]: [t_time_sk#83]
Arguments: [t_time_sk#83]

(147) CometBroadcastHashJoin
Left output [2]: [ss_sold_time_sk#76, ss_store_sk#78]
Right output [1]: [t_time_sk#83]
Arguments: [ss_sold_time_sk#76], [t_time_sk#83], Inner

(148) CometProject
Input [3]: [ss_sold_time_sk#76, ss_store_sk#78, t_time_sk#83]
Arguments: [ss_store_sk#78], [ss_store_sk#78]

(149) Scan parquet spark_catalog.default.store
Output [2]: [s_store_sk#86, s_store_name#87]
Batched: true
Location [not included in comparison]/{warehouse_dir}/store]
PushedFilters: [IsNotNull(s_store_name), EqualTo(s_store_name,ese), IsNotNull(s_store_sk)]
ReadSchema: struct<s_store_sk:int,s_store_name:string>

(150) CometFilter
Input [2]: [s_store_sk#86, s_store_name#87]
Condition : ((isnotnull(s_store_name#87) AND (s_store_name#87 = ese)) AND isnotnull(s_store_sk#86))

(151) CometProject
Input [2]: [s_store_sk#86, s_store_name#87]
Arguments: [s_store_sk#86], [s_store_sk#86]

(152) CometBroadcastExchange
Input [1]: [s_store_sk#86]
Arguments: [s_store_sk#86]

(153) CometBroadcastHashJoin
Left output [1]: [ss_store_sk#78]
Right output [1]: [s_store_sk#86]
Arguments: [ss_store_sk#78], [s_store_sk#86], Inner

(154) CometProject
Input [2]: [ss_store_sk#78, s_store_sk#86]

(155) CometHashAggregate
Input: []
Keys: []
Functions [1]: [partial_count(1)]

(156) ColumnarToRow [codegen id : 10]
Input [1]: [count#88]

(157) Exchange
Input [1]: [count#88]
Arguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=10]

(158) HashAggregate [codegen id : 11]
Input [1]: [count#88]
Keys: []
Functions [1]: [count(1)]
Aggregate Attributes [1]: [count(1)#89]
Results [1]: [count(1)#89 AS h11_to_11_30#90]

(159) BroadcastExchange
Input [1]: [h11_to_11_30#90]
Arguments: IdentityBroadcastMode, [plan_id=11]

(160) BroadcastNestedLoopJoin [codegen id : 16]
Join type: Inner
Join condition: None

(161) Scan parquet spark_catalog.default.store_sales
Output [4]: [ss_sold_time_sk#91, ss_hdemo_sk#92, ss_store_sk#93, ss_sold_date_sk#94]
Batched: true
Location [not included in comparison]/{warehouse_dir}/store_sales]
PushedFilters: [IsNotNull(ss_hdemo_sk), IsNotNull(ss_sold_time_sk), IsNotNull(ss_store_sk)]
ReadSchema: struct<ss_sold_time_sk:int,ss_hdemo_sk:int,ss_store_sk:int>

(162) CometFilter
Input [4]: [ss_sold_time_sk#91, ss_hdemo_sk#92, ss_store_sk#93, ss_sold_date_sk#94]
Condition : ((isnotnull(ss_hdemo_sk#92) AND isnotnull(ss_sold_time_sk#91)) AND isnotnull(ss_store_sk#93))

(163) CometProject
Input [4]: [ss_sold_time_sk#91, ss_hdemo_sk#92, ss_store_sk#93, ss_sold_date_sk#94]
Arguments: [ss_sold_time_sk#91, ss_hdemo_sk#92, ss_store_sk#93], [ss_sold_time_sk#91, ss_hdemo_sk#92, ss_store_sk#93]

(164) Scan parquet spark_catalog.default.household_demographics
Output [3]: [hd_demo_sk#95, hd_dep_count#96, hd_vehicle_count#97]
Batched: true
Location [not included in comparison]/{warehouse_dir}/household_demographics]
PushedFilters: [Or(Or(And(EqualTo(hd_dep_count,4),LessThanOrEqual(hd_vehicle_count,6)),And(EqualTo(hd_dep_count,2),LessThanOrEqual(hd_vehicle_count,4))),And(EqualTo(hd_dep_count,0),LessThanOrEqual(hd_vehicle_count,2))), IsNotNull(hd_demo_sk)]
ReadSchema: struct<hd_demo_sk:int,hd_dep_count:int,hd_vehicle_count:int>

(165) CometFilter
Input [3]: [hd_demo_sk#95, hd_dep_count#96, hd_vehicle_count#97]
Condition : (((((hd_dep_count#96 = 4) AND (hd_vehicle_count#97 <= 6)) OR ((hd_dep_count#96 = 2) AND (hd_vehicle_count#97 <= 4))) OR ((hd_dep_count#96 = 0) AND (hd_vehicle_count#97 <= 2))) AND isnotnull(hd_demo_sk#95))

(166) CometProject
Input [3]: [hd_demo_sk#95, hd_dep_count#96, hd_vehicle_count#97]
Arguments: [hd_demo_sk#95], [hd_demo_sk#95]

(167) CometBroadcastExchange
Input [1]: [hd_demo_sk#95]
Arguments: [hd_demo_sk#95]

(168) CometBroadcastHashJoin
Left output [3]: [ss_sold_time_sk#91, ss_hdemo_sk#92, ss_store_sk#93]
Right output [1]: [hd_demo_sk#95]
Arguments: [ss_hdemo_sk#92], [hd_demo_sk#95], Inner

(169) CometProject
Input [4]: [ss_sold_time_sk#91, ss_hdemo_sk#92, ss_store_sk#93, hd_demo_sk#95]
Arguments: [ss_sold_time_sk#91, ss_store_sk#93], [ss_sold_time_sk#91, ss_store_sk#93]

(170) Scan parquet spark_catalog.default.time_dim
Output [3]: [t_time_sk#98, t_hour#99, t_minute#100]
Batched: true
Location [not included in comparison]/{warehouse_dir}/time_dim]
PushedFilters: [IsNotNull(t_hour), IsNotNull(t_minute), EqualTo(t_hour,11), GreaterThanOrEqual(t_minute,30), IsNotNull(t_time_sk)]
ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int>

(171) CometFilter
Input [3]: [t_time_sk#98, t_hour#99, t_minute#100]
Condition : ((((isnotnull(t_hour#99) AND isnotnull(t_minute#100)) AND (t_hour#99 = 11)) AND (t_minute#100 >= 30)) AND isnotnull(t_time_sk#98))

(172) CometProject
Input [3]: [t_time_sk#98, t_hour#99, t_minute#100]
Arguments: [t_time_sk#98], [t_time_sk#98]

(173) CometBroadcastExchange
Input [1]: [t_time_sk#98]
Arguments: [t_time_sk#98]

(174) CometBroadcastHashJoin
Left output [2]: [ss_sold_time_sk#91, ss_store_sk#93]
Right output [1]: [t_time_sk#98]
Arguments: [ss_sold_time_sk#91], [t_time_sk#98], Inner

(175) CometProject
Input [3]: [ss_sold_time_sk#91, ss_store_sk#93, t_time_sk#98]
Arguments: [ss_store_sk#93], [ss_store_sk#93]

(176) Scan parquet spark_catalog.default.store
Output [2]: [s_store_sk#101, s_store_name#102]
Batched: true
Location [not included in comparison]/{warehouse_dir}/store]
PushedFilters: [IsNotNull(s_store_name), EqualTo(s_store_name,ese), IsNotNull(s_store_sk)]
ReadSchema: struct<s_store_sk:int,s_store_name:string>

(177) CometFilter
Input [2]: [s_store_sk#101, s_store_name#102]
Condition : ((isnotnull(s_store_name#102) AND (s_store_name#102 = ese)) AND isnotnull(s_store_sk#101))

(178) CometProject
Input [2]: [s_store_sk#101, s_store_name#102]
Arguments: [s_store_sk#101], [s_store_sk#101]

(179) CometBroadcastExchange
Input [1]: [s_store_sk#101]
Arguments: [s_store_sk#101]

(180) CometBroadcastHashJoin
Left output [1]: [ss_store_sk#93]
Right output [1]: [s_store_sk#101]
Arguments: [ss_store_sk#93], [s_store_sk#101], Inner

(181) CometProject
Input [2]: [ss_store_sk#93, s_store_sk#101]

(182) CometHashAggregate
Input: []
Keys: []
Functions [1]: [partial_count(1)]

(183) ColumnarToRow [codegen id : 12]
Input [1]: [count#103]

(184) Exchange
Input [1]: [count#103]
Arguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=12]

(185) HashAggregate [codegen id : 13]
Input [1]: [count#103]
Keys: []
Functions [1]: [count(1)]
Aggregate Attributes [1]: [count(1)#104]
Results [1]: [count(1)#104 AS h11_30_to_12#105]

(186) BroadcastExchange
Input [1]: [h11_30_to_12#105]
Arguments: IdentityBroadcastMode, [plan_id=13]

(187) BroadcastNestedLoopJoin [codegen id : 16]
Join type: Inner
Join condition: None

(188) Scan parquet spark_catalog.default.store_sales
Output [4]: [ss_sold_time_sk#106, ss_hdemo_sk#107, ss_store_sk#108, ss_sold_date_sk#109]
Batched: true
Location [not included in comparison]/{warehouse_dir}/store_sales]
PushedFilters: [IsNotNull(ss_hdemo_sk), IsNotNull(ss_sold_time_sk), IsNotNull(ss_store_sk)]
ReadSchema: struct<ss_sold_time_sk:int,ss_hdemo_sk:int,ss_store_sk:int>

(189) CometFilter
Input [4]: [ss_sold_time_sk#106, ss_hdemo_sk#107, ss_store_sk#108, ss_sold_date_sk#109]
Condition : ((isnotnull(ss_hdemo_sk#107) AND isnotnull(ss_sold_time_sk#106)) AND isnotnull(ss_store_sk#108))

(190) CometProject
Input [4]: [ss_sold_time_sk#106, ss_hdemo_sk#107, ss_store_sk#108, ss_sold_date_sk#109]
Arguments: [ss_sold_time_sk#106, ss_hdemo_sk#107, ss_store_sk#108], [ss_sold_time_sk#106, ss_hdemo_sk#107, ss_store_sk#108]

(191) Scan parquet spark_catalog.default.household_demographics
Output [3]: [hd_demo_sk#110, hd_dep_count#111, hd_vehicle_count#112]
Batched: true
Location [not included in comparison]/{warehouse_dir}/household_demographics]
PushedFilters: [Or(Or(And(EqualTo(hd_dep_count,4),LessThanOrEqual(hd_vehicle_count,6)),And(EqualTo(hd_dep_count,2),LessThanOrEqual(hd_vehicle_count,4))),And(EqualTo(hd_dep_count,0),LessThanOrEqual(hd_vehicle_count,2))), IsNotNull(hd_demo_sk)]
ReadSchema: struct<hd_demo_sk:int,hd_dep_count:int,hd_vehicle_count:int>

(192) CometFilter
Input [3]: [hd_demo_sk#110, hd_dep_count#111, hd_vehicle_count#112]
Condition : (((((hd_dep_count#111 = 4) AND (hd_vehicle_count#112 <= 6)) OR ((hd_dep_count#111 = 2) AND (hd_vehicle_count#112 <= 4))) OR ((hd_dep_count#111 = 0) AND (hd_vehicle_count#112 <= 2))) AND isnotnull(hd_demo_sk#110))

(193) CometProject
Input [3]: [hd_demo_sk#110, hd_dep_count#111, hd_vehicle_count#112]
Arguments: [hd_demo_sk#110], [hd_demo_sk#110]

(194) CometBroadcastExchange
Input [1]: [hd_demo_sk#110]
Arguments: [hd_demo_sk#110]

(195) CometBroadcastHashJoin
Left output [3]: [ss_sold_time_sk#106, ss_hdemo_sk#107, ss_store_sk#108]
Right output [1]: [hd_demo_sk#110]
Arguments: [ss_hdemo_sk#107], [hd_demo_sk#110], Inner

(196) CometProject
Input [4]: [ss_sold_time_sk#106, ss_hdemo_sk#107, ss_store_sk#108, hd_demo_sk#110]
Arguments: [ss_sold_time_sk#106, ss_store_sk#108], [ss_sold_time_sk#106, ss_store_sk#108]

(197) Scan parquet spark_catalog.default.time_dim
Output [3]: [t_time_sk#113, t_hour#114, t_minute#115]
Batched: true
Location [not included in comparison]/{warehouse_dir}/time_dim]
PushedFilters: [IsNotNull(t_hour), IsNotNull(t_minute), EqualTo(t_hour,12), LessThan(t_minute,30), IsNotNull(t_time_sk)]
ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int>

(198) CometFilter
Input [3]: [t_time_sk#113, t_hour#114, t_minute#115]
Condition : ((((isnotnull(t_hour#114) AND isnotnull(t_minute#115)) AND (t_hour#114 = 12)) AND (t_minute#115 < 30)) AND isnotnull(t_time_sk#113))

(199) CometProject
Input [3]: [t_time_sk#113, t_hour#114, t_minute#115]
Arguments: [t_time_sk#113], [t_time_sk#113]

(200) CometBroadcastExchange
Input [1]: [t_time_sk#113]
Arguments: [t_time_sk#113]

(201) CometBroadcastHashJoin
Left output [2]: [ss_sold_time_sk#106, ss_store_sk#108]
Right output [1]: [t_time_sk#113]
Arguments: [ss_sold_time_sk#106], [t_time_sk#113], Inner

(202) CometProject
Input [3]: [ss_sold_time_sk#106, ss_store_sk#108, t_time_sk#113]
Arguments: [ss_store_sk#108], [ss_store_sk#108]

(203) Scan parquet spark_catalog.default.store
Output [2]: [s_store_sk#116, s_store_name#117]
Batched: true
Location [not included in comparison]/{warehouse_dir}/store]
PushedFilters: [IsNotNull(s_store_name), EqualTo(s_store_name,ese), IsNotNull(s_store_sk)]
ReadSchema: struct<s_store_sk:int,s_store_name:string>

(204) CometFilter
Input [2]: [s_store_sk#116, s_store_name#117]
Condition : ((isnotnull(s_store_name#117) AND (s_store_name#117 = ese)) AND isnotnull(s_store_sk#116))

(205) CometProject
Input [2]: [s_store_sk#116, s_store_name#117]
Arguments: [s_store_sk#116], [s_store_sk#116]

(206) CometBroadcastExchange
Input [1]: [s_store_sk#116]
Arguments: [s_store_sk#116]

(207) CometBroadcastHashJoin
Left output [1]: [ss_store_sk#108]
Right output [1]: [s_store_sk#116]
Arguments: [ss_store_sk#108], [s_store_sk#116], Inner

(208) CometProject
Input [2]: [ss_store_sk#108, s_store_sk#116]

(209) CometHashAggregate
Input: []
Keys: []
Functions [1]: [partial_count(1)]

(210) ColumnarToRow [codegen id : 14]
Input [1]: [count#118]

(211) Exchange
Input [1]: [count#118]
Arguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=14]

(212) HashAggregate [codegen id : 15]
Input [1]: [count#118]
Keys: []
Functions [1]: [count(1)]
Aggregate Attributes [1]: [count(1)#119]
Results [1]: [count(1)#119 AS h12_to_12_30#120]

(213) BroadcastExchange
Input [1]: [h12_to_12_30#120]
Arguments: IdentityBroadcastMode, [plan_id=15]

(214) BroadcastNestedLoopJoin [codegen id : 16]
Join type: Inner
Join condition: None

