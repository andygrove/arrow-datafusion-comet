== Physical Plan ==
TakeOrderedAndProject (40)
+- * HashAggregate (39)
   +- Exchange (38)
      +- * ColumnarToRow (37)
         +- CometHashAggregate (36)
            +- CometProject (35)
               +- CometBroadcastHashJoin (34)
                  :- CometProject (30)
                  :  +- CometBroadcastHashJoin (29)
                  :     :- CometProject (24)
                  :     :  +- CometBroadcastHashJoin (23)
                  :     :     :- CometBroadcastHashJoin (17)
                  :     :     :  :- CometBroadcastHashJoin (11)
                  :     :     :  :  :- CometFilter (2)
                  :     :     :  :  :  +- CometScan parquet spark_catalog.default.customer (1)
                  :     :     :  :  +- CometBroadcastExchange (10)
                  :     :     :  :     +- CometProject (9)
                  :     :     :  :        +- CometBroadcastHashJoin (8)
                  :     :     :  :           :- CometScan parquet spark_catalog.default.store_sales (3)
                  :     :     :  :           +- CometBroadcastExchange (7)
                  :     :     :  :              +- CometProject (6)
                  :     :     :  :                 +- CometFilter (5)
                  :     :     :  :                    +- CometScan parquet spark_catalog.default.date_dim (4)
                  :     :     :  +- CometBroadcastExchange (16)
                  :     :     :     +- CometProject (15)
                  :     :     :        +- CometBroadcastHashJoin (14)
                  :     :     :           :- CometScan parquet spark_catalog.default.web_sales (12)
                  :     :     :           +- ReusedExchange (13)
                  :     :     +- CometBroadcastExchange (22)
                  :     :        +- CometProject (21)
                  :     :           +- CometBroadcastHashJoin (20)
                  :     :              :- CometScan parquet spark_catalog.default.catalog_sales (18)
                  :     :              +- ReusedExchange (19)
                  :     +- CometBroadcastExchange (28)
                  :        +- CometProject (27)
                  :           +- CometFilter (26)
                  :              +- CometScan parquet spark_catalog.default.customer_address (25)
                  +- CometBroadcastExchange (33)
                     +- CometFilter (32)
                        +- CometScan parquet spark_catalog.default.customer_demographics (31)


(1) Scan parquet spark_catalog.default.customer
Output [3]: [c_customer_sk#1, c_current_cdemo_sk#2, c_current_addr_sk#3]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer]
PushedFilters: [IsNotNull(c_current_addr_sk), IsNotNull(c_current_cdemo_sk)]
ReadSchema: struct<c_customer_sk:int,c_current_cdemo_sk:int,c_current_addr_sk:int>

(2) CometFilter
Input [3]: [c_customer_sk#1, c_current_cdemo_sk#2, c_current_addr_sk#3]
Condition : (isnotnull(c_current_addr_sk#3) AND isnotnull(c_current_cdemo_sk#2))

(3) Scan parquet spark_catalog.default.store_sales
Output [2]: [ss_customer_sk#4, ss_sold_date_sk#5]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ss_sold_date_sk#5), dynamicpruningexpression(ss_sold_date_sk#5 IN dynamicpruning#6)]
ReadSchema: struct<ss_customer_sk:int>

(4) Scan parquet spark_catalog.default.date_dim
Output [3]: [d_date_sk#7, d_year#8, d_moy#9]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2001), GreaterThanOrEqual(d_moy,4), LessThanOrEqual(d_moy,6), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>

(5) CometFilter
Input [3]: [d_date_sk#7, d_year#8, d_moy#9]
Condition : (((((isnotnull(d_year#8) AND isnotnull(d_moy#9)) AND (d_year#8 = 2001)) AND (d_moy#9 >= 4)) AND (d_moy#9 <= 6)) AND isnotnull(d_date_sk#7))

(6) CometProject
Input [3]: [d_date_sk#7, d_year#8, d_moy#9]
Arguments: [d_date_sk#7], [d_date_sk#7]

(7) CometBroadcastExchange
Input [1]: [d_date_sk#7]
Arguments: [d_date_sk#7]

(8) CometBroadcastHashJoin
Left output [2]: [ss_customer_sk#4, ss_sold_date_sk#5]
Right output [1]: [d_date_sk#7]
Arguments: [ss_sold_date_sk#5], [d_date_sk#7], Inner

(9) CometProject
Input [3]: [ss_customer_sk#4, ss_sold_date_sk#5, d_date_sk#7]
Arguments: [ss_customer_sk#4], [ss_customer_sk#4]

(10) CometBroadcastExchange
Input [1]: [ss_customer_sk#4]
Arguments: [ss_customer_sk#4]

(11) CometBroadcastHashJoin
Left output [3]: [c_customer_sk#1, c_current_cdemo_sk#2, c_current_addr_sk#3]
Right output [1]: [ss_customer_sk#4]
Arguments: [c_customer_sk#1], [ss_customer_sk#4], LeftSemi

(12) Scan parquet spark_catalog.default.web_sales
Output [2]: [ws_bill_customer_sk#10, ws_sold_date_sk#11]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ws_sold_date_sk#11), dynamicpruningexpression(ws_sold_date_sk#11 IN dynamicpruning#12)]
ReadSchema: struct<ws_bill_customer_sk:int>

(13) ReusedExchange [Reuses operator id: 7]
Output [1]: [d_date_sk#13]

(14) CometBroadcastHashJoin
Left output [2]: [ws_bill_customer_sk#10, ws_sold_date_sk#11]
Right output [1]: [d_date_sk#13]
Arguments: [ws_sold_date_sk#11], [d_date_sk#13], Inner

(15) CometProject
Input [3]: [ws_bill_customer_sk#10, ws_sold_date_sk#11, d_date_sk#13]
Arguments: [ws_bill_customer_sk#10], [ws_bill_customer_sk#10]

(16) CometBroadcastExchange
Input [1]: [ws_bill_customer_sk#10]
Arguments: [ws_bill_customer_sk#10]

(17) CometBroadcastHashJoin
Left output [3]: [c_customer_sk#1, c_current_cdemo_sk#2, c_current_addr_sk#3]
Right output [1]: [ws_bill_customer_sk#10]
Arguments: [c_customer_sk#1], [ws_bill_customer_sk#10], LeftAnti

(18) Scan parquet spark_catalog.default.catalog_sales
Output [2]: [cs_ship_customer_sk#14, cs_sold_date_sk#15]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(cs_sold_date_sk#15), dynamicpruningexpression(cs_sold_date_sk#15 IN dynamicpruning#16)]
ReadSchema: struct<cs_ship_customer_sk:int>

(19) ReusedExchange [Reuses operator id: 7]
Output [1]: [d_date_sk#17]

(20) CometBroadcastHashJoin
Left output [2]: [cs_ship_customer_sk#14, cs_sold_date_sk#15]
Right output [1]: [d_date_sk#17]
Arguments: [cs_sold_date_sk#15], [d_date_sk#17], Inner

(21) CometProject
Input [3]: [cs_ship_customer_sk#14, cs_sold_date_sk#15, d_date_sk#17]
Arguments: [cs_ship_customer_sk#14], [cs_ship_customer_sk#14]

(22) CometBroadcastExchange
Input [1]: [cs_ship_customer_sk#14]
Arguments: [cs_ship_customer_sk#14]

(23) CometBroadcastHashJoin
Left output [3]: [c_customer_sk#1, c_current_cdemo_sk#2, c_current_addr_sk#3]
Right output [1]: [cs_ship_customer_sk#14]
Arguments: [c_customer_sk#1], [cs_ship_customer_sk#14], LeftAnti

(24) CometProject
Input [3]: [c_customer_sk#1, c_current_cdemo_sk#2, c_current_addr_sk#3]
Arguments: [c_current_cdemo_sk#2, c_current_addr_sk#3], [c_current_cdemo_sk#2, c_current_addr_sk#3]

(25) Scan parquet spark_catalog.default.customer_address
Output [2]: [ca_address_sk#18, ca_state#19]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer_address]
PushedFilters: [In(ca_state, [GA,KY,NM]), IsNotNull(ca_address_sk)]
ReadSchema: struct<ca_address_sk:int,ca_state:string>

(26) CometFilter
Input [2]: [ca_address_sk#18, ca_state#19]
Condition : (ca_state#19 IN (KY,GA,NM) AND isnotnull(ca_address_sk#18))

(27) CometProject
Input [2]: [ca_address_sk#18, ca_state#19]
Arguments: [ca_address_sk#18], [ca_address_sk#18]

(28) CometBroadcastExchange
Input [1]: [ca_address_sk#18]
Arguments: [ca_address_sk#18]

(29) CometBroadcastHashJoin
Left output [2]: [c_current_cdemo_sk#2, c_current_addr_sk#3]
Right output [1]: [ca_address_sk#18]
Arguments: [c_current_addr_sk#3], [ca_address_sk#18], Inner

(30) CometProject
Input [3]: [c_current_cdemo_sk#2, c_current_addr_sk#3, ca_address_sk#18]
Arguments: [c_current_cdemo_sk#2], [c_current_cdemo_sk#2]

(31) Scan parquet spark_catalog.default.customer_demographics
Output [6]: [cd_demo_sk#20, cd_gender#21, cd_marital_status#22, cd_education_status#23, cd_purchase_estimate#24, cd_credit_rating#25]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer_demographics]
PushedFilters: [IsNotNull(cd_demo_sk)]
ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_marital_status:string,cd_education_status:string,cd_purchase_estimate:int,cd_credit_rating:string>

(32) CometFilter
Input [6]: [cd_demo_sk#20, cd_gender#21, cd_marital_status#22, cd_education_status#23, cd_purchase_estimate#24, cd_credit_rating#25]
Condition : isnotnull(cd_demo_sk#20)

(33) CometBroadcastExchange
Input [6]: [cd_demo_sk#20, cd_gender#21, cd_marital_status#22, cd_education_status#23, cd_purchase_estimate#24, cd_credit_rating#25]
Arguments: [cd_demo_sk#20, cd_gender#21, cd_marital_status#22, cd_education_status#23, cd_purchase_estimate#24, cd_credit_rating#25]

(34) CometBroadcastHashJoin
Left output [1]: [c_current_cdemo_sk#2]
Right output [6]: [cd_demo_sk#20, cd_gender#21, cd_marital_status#22, cd_education_status#23, cd_purchase_estimate#24, cd_credit_rating#25]
Arguments: [c_current_cdemo_sk#2], [cd_demo_sk#20], Inner

(35) CometProject
Input [7]: [c_current_cdemo_sk#2, cd_demo_sk#20, cd_gender#21, cd_marital_status#22, cd_education_status#23, cd_purchase_estimate#24, cd_credit_rating#25]
Arguments: [cd_gender#21, cd_marital_status#22, cd_education_status#23, cd_purchase_estimate#24, cd_credit_rating#25], [cd_gender#21, cd_marital_status#22, cd_education_status#23, cd_purchase_estimate#24, cd_credit_rating#25]

(36) CometHashAggregate
Input [5]: [cd_gender#21, cd_marital_status#22, cd_education_status#23, cd_purchase_estimate#24, cd_credit_rating#25]
Keys [5]: [cd_gender#21, cd_marital_status#22, cd_education_status#23, cd_purchase_estimate#24, cd_credit_rating#25]
Functions [1]: [partial_count(1)]

(37) ColumnarToRow [codegen id : 1]
Input [6]: [cd_gender#21, cd_marital_status#22, cd_education_status#23, cd_purchase_estimate#24, cd_credit_rating#25, count#26]

(38) Exchange
Input [6]: [cd_gender#21, cd_marital_status#22, cd_education_status#23, cd_purchase_estimate#24, cd_credit_rating#25, count#26]
Arguments: hashpartitioning(cd_gender#21, cd_marital_status#22, cd_education_status#23, cd_purchase_estimate#24, cd_credit_rating#25, 5), ENSURE_REQUIREMENTS, [plan_id=1]

(39) HashAggregate [codegen id : 2]
Input [6]: [cd_gender#21, cd_marital_status#22, cd_education_status#23, cd_purchase_estimate#24, cd_credit_rating#25, count#26]
Keys [5]: [cd_gender#21, cd_marital_status#22, cd_education_status#23, cd_purchase_estimate#24, cd_credit_rating#25]
Functions [1]: [count(1)]
Aggregate Attributes [1]: [count(1)#27]
Results [8]: [cd_gender#21, cd_marital_status#22, cd_education_status#23, count(1)#27 AS cnt1#28, cd_purchase_estimate#24, count(1)#27 AS cnt2#29, cd_credit_rating#25, count(1)#27 AS cnt3#30]

(40) TakeOrderedAndProject
Input [8]: [cd_gender#21, cd_marital_status#22, cd_education_status#23, cnt1#28, cd_purchase_estimate#24, cnt2#29, cd_credit_rating#25, cnt3#30]
Arguments: 100, [cd_gender#21 ASC NULLS FIRST, cd_marital_status#22 ASC NULLS FIRST, cd_education_status#23 ASC NULLS FIRST, cd_purchase_estimate#24 ASC NULLS FIRST, cd_credit_rating#25 ASC NULLS FIRST], [cd_gender#21, cd_marital_status#22, cd_education_status#23, cnt1#28, cd_purchase_estimate#24, cnt2#29, cd_credit_rating#25, cnt3#30]

===== Subqueries =====

Subquery:1 Hosting operator id = 3 Hosting Expression = ss_sold_date_sk#5 IN dynamicpruning#6
BroadcastExchange (45)
+- * ColumnarToRow (44)
   +- CometProject (43)
      +- CometFilter (42)
         +- CometScan parquet spark_catalog.default.date_dim (41)


(41) Scan parquet spark_catalog.default.date_dim
Output [3]: [d_date_sk#7, d_year#8, d_moy#9]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2001), GreaterThanOrEqual(d_moy,4), LessThanOrEqual(d_moy,6), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>

(42) CometFilter
Input [3]: [d_date_sk#7, d_year#8, d_moy#9]
Condition : (((((isnotnull(d_year#8) AND isnotnull(d_moy#9)) AND (d_year#8 = 2001)) AND (d_moy#9 >= 4)) AND (d_moy#9 <= 6)) AND isnotnull(d_date_sk#7))

(43) CometProject
Input [3]: [d_date_sk#7, d_year#8, d_moy#9]
Arguments: [d_date_sk#7], [d_date_sk#7]

(44) ColumnarToRow [codegen id : 1]
Input [1]: [d_date_sk#7]

(45) BroadcastExchange
Input [1]: [d_date_sk#7]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=2]

Subquery:2 Hosting operator id = 12 Hosting Expression = ws_sold_date_sk#11 IN dynamicpruning#6

Subquery:3 Hosting operator id = 18 Hosting Expression = cs_sold_date_sk#15 IN dynamicpruning#6


